(undo-tree-save-format-version . 1)
"0083352761bf7a36c560fc26dc508f20d469a51d"
[nil nil nil nil (25592 16263 974437 333000) 0 nil]
([nil nil ((1332 . 1384) (t 25591 9494 0 0)) nil (25592 16263 974435 533000) 0 nil])
([nil nil ((1412 . 1417)) nil (25592 16263 974433 933000) 0 nil])
([nil nil ((1417 . 1419)) nil (25592 16263 974432 333000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-string-face fontified t)) . -1413) (undo-tree-id1 . -1) (#("I" 0 1 (face font-lock-string-face fontified t)) . -1414) (undo-tree-id2 . -1) (#("D" 0 1 (face font-lock-string-face fontified t)) . -1415) (undo-tree-id3 . -1) (#("E" 0 1 (face font-lock-string-face fontified t)) . -1416) (undo-tree-id4 . -1) (#("B" 0 1 (face font-lock-string-face fontified t)) . -1417) (undo-tree-id5 . -1) (#("A" 0 1 (face font-lock-string-face fontified t)) . -1418) (undo-tree-id6 . -1) 1419) nil (25592 16263 974428 533000) 0 nil])
([nil nil ((1413 . 1420)) nil (25592 16263 974417 633000) 0 nil])
([nil nil ((#("                   " 0 10 (face font-lock-comment-face fontified t) 10 19 (face font-lock-comment-face fontified t)) . 1551) (undo-tree-id0 . -19)) nil (25592 16263 974411 733000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5197 . 5198) (nil fontified nil 2243 . 5198) (2243 . 5198) 2242 (t 25592 16264 262149 934000)) nil (25592 21075 650558 778000) 0 nil])
([nil nil ((#("(use-package org
  :ensure nil
  :config
  ;; Refresh org-agenda after rescheduling a task.
  (defun org-agenda-refresh ()
    \"Refresh all `org-agenda' buffers.\"
    (dolist (buffer (buffer-list))
      (with-current-buffer buffer
        (when (derived-mode-p 'org-agenda-mode)
          (org-agenda-maybe-redo)))))

  (defadvice org-schedule (after refresh-agenda activate)
    \"Refresh org-agenda.\"
    (org-agenda-refresh))

  :custom
  (org-agenda-skip-scheduled-if-done t)
  (org-agenda-skip-deadline-if-done t)
  (org-agenda-include-deadlines t)
  (org-agenda-block-separator #x2501)
  (org-agenda-compact-blocks t)
  (org-agenda-start-with-log-mode t)
  ;; Number of days before expiration during which a deadline becomes active.
  (org-deadline-warning-days 30)
  ;; If non-nil, include in the agenda entries from the Emacs Calendar's diary.
  ;; Don't log the time a task was rescheduled or redeadlined.
  ;(org-agenda-use-tag-inheritance t)
  (org-log-redeadline nil)
  (org-log-reschedule nil)
  (org-agenda-include-diary nil)
  (org-agenda-include-inactive-timestamps t)
  (org-agenda-start-with-clockreport-mode t)
  (org-agenda-start-with-log-mode nil)
  (org-agenda-show-outline-path nil)
  (org-agenda-show-all-dates nil)
  (org-agenda-start-on-weekday nil)
  (org-agenda-start-day \"-3d\")
  (org-agenda-span 10)
  (org-agenda-confirm-kill t)
  ;; Shift tags in agenda items to this column.
  (org-agenda-tags-column 107)
  (org-agenda-time-leading-zero t)
  (org-agenda-menu-show-matcher t)
  (org-agenda-menu-two-columns nil)
  (org-agenda-skip-comment-trees t)
  (org-agenda-sticky nil)
  (org-agenda-window-setup 'current-window)
  (org-agenda-custom-commands-contexts nil)
  (org-agenda-max-entries nil)
  (org-agenda-max-todos nil)
  (org-agenda-max-tags nil)
  (org-agenda-max-effort nil)
  (org-agenda-log-mode-add-notes t)
  (org-agenda-sort-notime-is-late t) ; Org 9.4
  (org-agenda-sort-noeffort-is-high t) ; Org 9.4
  (org-log-done (quote time))
  ;; Prefer rescheduling to future dates and times:
  (org-read-date-prefer-future 'time)

  ;; CUSTOM COMMANDS
  (org-agenda-custom-commands
   '((\"d\" \"Dashboard\"
      ((agenda \"\" ((org-deadline-warning-days 7)))
       (todo \"INFO\" ((org-agenda-overriding-header \"Next Tasks\")))
       (tags-todo \"agenda/ACTIVE\" ((org-agenda-overriding-header \"Active Projects\")))))

     (\"n\" \"Next Tasks\"
      ((agenda \"\" ((org-deadline-warning-days 7)))
       (todo \"NEXT\" ((org-agenda-overriding-header \"Next Tasks\")))))

     (\"b\" \"Birtdays\" tags-todo \"+person\")

     (\"h\" \"Home Tasks\" tags-todo \"+home\")

     (\"w\" \"Work Tasks\" tags-todo \"+work\")

     (\"i\" \"ISB Tasks\" tags-todo \"+isb\")

     (\"E\" \"Easy Tasks\" tags-todo \"+easy\")

     (\"C\" \"Challenging Tasks\" tags-todo \"+challenging\")

     (\"e\" tags-todo \"+TODO=\\\"NEXT\\\"+Effort<15&+Effort>0\"
      ((org-agenda-overriding-header \"Low Effort Tasks\")
       (org-agenda-max-todos 20)
       (org-agenda-files org-agenda-files))))))
" 0 128 (fontified nil face font-lock-string-face) 128 141 (fontified nil) 141 151 (fontified nil face (font-lock-constant-face)) 151 161 (fontified nil) 161 382 (fontified nil face font-lock-string-face) 382 401 (fontified nil) 401 1301 (fontified nil face font-lock-string-face) 1301 1304 (fontified nil) 1304 1474 (fontified nil face font-lock-string-face) 1474 1483 (fontified nil face font-lock-string-face) 1483 1509 (fontified nil face font-lock-string-face) 1509 2124 (fontified nil face font-lock-string-face) 2124 2125 (fontified nil) 2125 2128 (fontified nil face font-lock-string-face) 2128 2137 (fontified nil) 2137 2155 (fontified nil face font-lock-string-face) 2155 2204 (fontified nil face font-lock-string-face) 2204 2208 (fontified nil) 2208 2242 (fontified nil face font-lock-string-face) 2242 2252 (fontified nil) 2252 2276 (fontified nil face font-lock-string-face) 2276 2289 (fontified nil) 2289 2323 (fontified nil face font-lock-string-face) 2323 2338 (fontified nil) 2338 2353 (fontified nil face font-lock-string-face) 2353 2354 (fontified nil) 2354 2357 (fontified nil face font-lock-string-face) 2357 2367 (fontified nil) 2367 2385 (fontified nil face font-lock-string-face) 2385 2434 (fontified nil face font-lock-string-face) 2434 2438 (fontified nil) 2438 2472 (fontified nil face font-lock-string-face) 2472 2482 (fontified nil) 2482 2497 (fontified nil face font-lock-string-face) 2497 2498 (fontified nil) 2498 2501 (fontified nil face font-lock-string-face) 2501 2509 (fontified nil) 2509 2522 (fontified nil face font-lock-string-face) 2522 2529 (fontified nil) 2529 2540 (fontified nil face font-lock-string-face) 2540 2541 (fontified nil) 2541 2544 (fontified nil face font-lock-string-face) 2544 2554 (fontified nil) 2554 2567 (fontified nil face font-lock-string-face) 2567 2572 (fontified nil) 2572 2583 (fontified nil face font-lock-string-face) 2583 2584 (fontified nil) 2584 2587 (fontified nil face font-lock-string-face) 2587 2597 (fontified nil) 2597 2610 (fontified nil face font-lock-string-face) 2610 2615 (fontified nil) 2615 2626 (fontified nil face font-lock-string-face) 2626 2627 (fontified nil) 2627 2630 (fontified nil face font-lock-string-face) 2630 2639 (fontified nil) 2639 2652 (fontified nil face font-lock-string-face) 2652 2656 (fontified nil) 2656 2667 (fontified nil face font-lock-string-face) 2667 2668 (fontified nil) 2668 2671 (fontified nil face font-lock-string-face) 2671 2681 (fontified nil) 2681 2694 (fontified nil face font-lock-string-face) 2694 2699 (fontified nil) 2699 2710 (fontified nil face font-lock-string-face) 2710 2711 (fontified nil) 2711 2714 (fontified nil face font-lock-string-face) 2714 2731 (fontified nil) 2731 2744 (fontified nil face font-lock-string-face) 2744 2756 (fontified nil) 2756 2767 (fontified nil face font-lock-string-face) 2767 2768 (fontified nil) 2768 2781 (fontified nil face font-lock-string-face) 2781 2815 (fontified nil) 2815 2855 (fontified nil face font-lock-string-face) 2855 2871 (fontified nil) 2871 2907 (fontified nil face font-lock-string-face) 2907 2954 (fontified nil face font-lock-string-face) 2954 2955 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 2243) (undo-tree-id1 . -2955) (undo-tree-id2 . -1276) (undo-tree-id3 . -2874) (undo-tree-id4 . -2874) (undo-tree-id5 . -2907) (undo-tree-id6 . -2907) (undo-tree-id7 . -2955) (undo-tree-id8 . -2955) (undo-tree-id9 . -1439) (undo-tree-id10 . -1439) (undo-tree-id11 . -1408) (undo-tree-id12 . -1408) (undo-tree-id13 . -2760) (undo-tree-id14 . -2760) (undo-tree-id15 . -2703) (undo-tree-id16 . -2703) (undo-tree-id17 . -2759) (undo-tree-id18 . -2759) (undo-tree-id19 . -2702) (undo-tree-id20 . -2702) (undo-tree-id21 . -2660) (undo-tree-id22 . -2660) (undo-tree-id23 . -2659) (undo-tree-id24 . -2659) (undo-tree-id25 . -2619) (undo-tree-id26 . -2619) (undo-tree-id27 . -2618) (undo-tree-id28 . -2618) (undo-tree-id29 . -2576) (undo-tree-id30 . -2576) (undo-tree-id31 . -2532) (undo-tree-id32 . -2532) (undo-tree-id33 . -1307) (undo-tree-id34 . -1307) (undo-tree-id35 . -2575) (undo-tree-id36 . -2575) (undo-tree-id37 . -2533) (undo-tree-id38 . -2533) (undo-tree-id39 . -1276) (undo-tree-id40 . -1276) (undo-tree-id41 . -1330) (undo-tree-id42 . -1330) (undo-tree-id43 . -1360) (undo-tree-id44 . -1360) (undo-tree-id45 . -2955) (undo-tree-id46 . -2817) (undo-tree-id47 . -2817) (undo-tree-id48 . -1474) (undo-tree-id49 . -1474) (undo-tree-id50 . -1509) (undo-tree-id51 . -1509) (undo-tree-id52 . -1545) (undo-tree-id53 . -1545) (undo-tree-id54 . -1581) (undo-tree-id55 . -1581) (undo-tree-id56 . -1607) (undo-tree-id57 . -1607) (undo-tree-id58 . -1651) (undo-tree-id59 . -1651) (undo-tree-id60 . -1695) (undo-tree-id61 . -1695) (undo-tree-id62 . -1726) (undo-tree-id63 . -1726) (undo-tree-id64 . -1755) (undo-tree-id65 . -1755) (undo-tree-id66 . -1783) (undo-tree-id67 . -1783) (undo-tree-id68 . -1813) (undo-tree-id69 . -1813) (undo-tree-id70 . -1849) (undo-tree-id71 . -1849) (undo-tree-id72 . -1896) (undo-tree-id73 . -1896) (undo-tree-id74 . -1945) (undo-tree-id75 . -1945) (undo-tree-id76 . -1975) (undo-tree-id77 . -1975) (undo-tree-id78 . -2027) (undo-tree-id79 . -2027) (undo-tree-id80 . -2065) (undo-tree-id81 . -2065) (undo-tree-id82 . -2066) (undo-tree-id83 . -2066) (undo-tree-id84 . -2087) (undo-tree-id85 . -2087) (undo-tree-id86 . -2117) (undo-tree-id87 . -2117) (undo-tree-id88 . -2139) (undo-tree-id89 . -2139) (undo-tree-id90 . -2190) (undo-tree-id91 . -2190) (undo-tree-id92 . -2257) (undo-tree-id93 . -2257) (undo-tree-id94 . -2345) (undo-tree-id95 . -2345) (undo-tree-id96 . -2346) (undo-tree-id97 . -2346) (undo-tree-id98 . -2369) (undo-tree-id99 . -2369) (undo-tree-id100 . -2420) (undo-tree-id101 . -2420) (undo-tree-id102 . -2489) (undo-tree-id103 . -2489) (undo-tree-id104 . -2490) (undo-tree-id105 . -2490) (undo-tree-id106 . -2954) (nil fontified t 5114 . 5150) (nil fontified t 5098 . 5114) (nil fontified t 5058 . 5098) (nil fontified t 5024 . 5058) (nil fontified t 5011 . 5024) (nil fontified t 5010 . 5011) (nil fontified t 4999 . 5010) (nil fontified t 4987 . 4999) (nil fontified t 4974 . 4987) (nil fontified t 4957 . 4974) (nil fontified t 4954 . 4957) (nil fontified t 4953 . 4954) (nil fontified t 4942 . 4953) (nil fontified t 4937 . 4942) (nil fontified t 4924 . 4937) (nil fontified t 4914 . 4924) (nil fontified t 4911 . 4914) (nil fontified t 4910 . 4911) (nil fontified t 4899 . 4910) (nil fontified t 4895 . 4899) (nil fontified t 4882 . 4895) (nil fontified t 4873 . 4882) (nil fontified t 4870 . 4873) (nil fontified t 4869 . 4870) (nil fontified t 4858 . 4869) (nil fontified t 4853 . 4858) (nil fontified t 4840 . 4853) (nil fontified t 4830 . 4840) (nil fontified t 4827 . 4830) (nil fontified t 4826 . 4827) (nil fontified t 4815 . 4826) (nil fontified t 4810 . 4815) (nil fontified t 4797 . 4810) (nil fontified t 4787 . 4797) (nil fontified t 4784 . 4787) (nil fontified t 4783 . 4784) (nil fontified t 4772 . 4783) (nil fontified t 4765 . 4772) (nil fontified t 4752 . 4765) (nil fontified t 4744 . 4752) (nil fontified t 4741 . 4744) (nil fontified t 4740 . 4741) (nil fontified t 4725 . 4740) (nil fontified t 4715 . 4725) (nil fontified t 4681 . 4715) (nil fontified t 4677 . 4681) (nil fontified t 4628 . 4677) (nil fontified t 4610 . 4628) (nil fontified t 4600 . 4610) (nil fontified t 4597 . 4600) (nil fontified t 4596 . 4597) (nil fontified t 4581 . 4596) (nil fontified t 4566 . 4581) (nil fontified t 4532 . 4566) (nil fontified t 4519 . 4532) (nil fontified t 4495 . 4519) (nil fontified t 4485 . 4495) (nil fontified t 4451 . 4485) (nil fontified t 4447 . 4451) (nil fontified t 4398 . 4447) (nil fontified t 4380 . 4398) (nil fontified t 4371 . 4380) (nil fontified t 4368 . 4371) (nil fontified t 4367 . 4368) (nil fontified t 3752 . 4367) (nil fontified t 3726 . 3752) (nil fontified t 3717 . 3726) (nil fontified t 3547 . 3717) (nil fontified t 3544 . 3547) (nil fontified t 2644 . 3544) (nil fontified t 2625 . 2644) (nil fontified t 2404 . 2625) (nil fontified t 2394 . 2404) (nil fontified t 2384 . 2394) (nil fontified t 2371 . 2384) (nil fontified t 2243 . 2371) (nil rear-nonsticky t 5197 . 5198)) nil (25592 21075 650542 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2324 . 2325) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -2423) (2324 . 2424) 2242 (t 25592 16264 262149 934000)) nil (25592 21075 649413 177000) 0 nil])
([nil nil ((#("savehist" 0 8 (fontified t face font-lock-string-face)) . 2343) (undo-tree-id0 . -7)) nil (25592 21075 649409 377000) 0 nil])
([nil nil ((2343 . 2344)) nil (25592 21075 649373 77000) 0 nil])
([nil nil ((2344 . 2349)) nil (25592 21075 649365 377000) 0 nil])
([nil nil ((#(";(load \"ui_blackout\")                       ;(P) Hide major and minor modes in the mode line.
;(load \"ui_rename-modeline\")                ;!(F) Shorter names for modes in modeline.
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 94 (face font-lock-comment-face fontified t) 94 95 (face font-lock-comment-delimiter-face fontified t) 95 181 (face font-lock-comment-face fontified t)) . 3471) (undo-tree-id0 . -116) (undo-tree-id1 . -94) (undo-tree-id2 . -94) (undo-tree-id3 . -181) (undo-tree-id4 . -181) (undo-tree-id5 . -94) (undo-tree-id6 . -181) (undo-tree-id7 . -116) (undo-tree-id8 . -22) (undo-tree-id9 . -116) (undo-tree-id10 . -22) (undo-tree-id11 . -116) (undo-tree-id12 . -180) 3587 (t 25592 21075 762194 923000)) nil (25592 25295 271177 135000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9837 . 9838) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -10018) (9837 . 10019) 9812) nil (25592 25295 271136 535000) 0 nil])
([nil nil ((#("(load \"compare_vdiff\")
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (fontified t) 6 21 (face font-lock-string-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (fontified t)) . 7903) (undo-tree-id22 . -23) (undo-tree-id23 . -22) (undo-tree-id24 . -23) (undo-tree-id25 . -23) (undo-tree-id26 . 23) (undo-tree-id27 . -1) (undo-tree-id28 . 2) (undo-tree-id29 . -22) (t 25592 25295 364202 343000)) nil (25592 25425 346670 741000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6585 . 6586) (#("
" 0 1 (fontified nil)) . -6608) (6585 . 6609) 6485) nil (25592 25425 346662 541000) 0 nil])
([nil nil ((#("(load \"compare_vdiff\")
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (fontified t) 6 21 (face font-lock-string-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (fontified t)) . 6586) (undo-tree-id13 . -23) (undo-tree-id14 . -23) (undo-tree-id15 . -23) (undo-tree-id16 . -22) (undo-tree-id17 . -22) (undo-tree-id18 . 23) (undo-tree-id19 . -1) (undo-tree-id20 . 2) (undo-tree-id21 . -22)) nil (25592 25425 346659 841000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6484 . 6485) (#("
" 0 1 (fontified nil)) . -6507) (6484 . 6508) 6416) nil (25592 25425 346603 41000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 6508)) nil (25592 25425 346595 841000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5911) (undo-tree-id33 . -1) (t 25592 25425 444204 561000)) nil (25592 25507 928999 954000) 0 nil])
([nil nil ((2363 . 2365)) nil (25592 25507 928997 854000) 0 nil])
([nil nil ((#("; Saves minibuffer & history commands between sessions" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 54 (face font-lock-comment-face fontified t)) . 2369) (undo-tree-id30 . -53) (undo-tree-id31 . -3) (undo-tree-id32 . 50)) nil (25592 25507 928996 554000) 0 nil])
([nil nil ((2369 . 2370)) nil (25592 25507 928963 454000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1428) (#(" " 0 1 (fontified t)) . 1428) (#(" " 0 1 (fontified t)) . 1428)) nil (25592 25507 928961 954000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1428) (#(" " 0 1 (fontified t)) . 1428) (#(" " 0 1 (fontified t)) . 1428) (#(" " 0 1 (fontified t)) . 1428) (#(" " 0 1 (fontified t)) . 1428) (#(" " 0 1 (fontified t)) . 1428)) nil (25592 25507 928957 654000) 0 nil])
([nil nil ((1428 . 1429)) nil (25592 25507 928950 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2408 . 2409) (nil fontified nil 2362 . 2409) (2362 . 2409) (t 25592 25508 24217 421000)) nil (25592 25673 724420 533000) 0 nil])
([nil nil ((2362 . 2363)) nil (25592 25673 724418 733000) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-comment-face fontified t)) . -2363) (undo-tree-id37 . -1) (2363 . 2364)) nil (25592 25673 724417 33000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 2399) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1)) nil (25592 25673 724412 733000) 0 nil])
([nil nil ((2399 . 2400)) nil (25592 25673 724382 33000) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-comment-face fontified t)) . -7845) (undo-tree-id84 . -1) (7845 . 7846) 7870 (t 25592 25673 854194 47000)) nil (25592 25927 797751 22000) 0 nil])
([nil nil ((#(";;; modules-search
;;(load \"search_swiper\")
(load \"search_affe\")
" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 19 (face font-lock-comment-face fontified t) 19 21 (face font-lock-comment-delimiter-face fontified t) 21 44 (face font-lock-comment-face fontified t) 44 45 (face (rainbow-delimiters-depth-1-face) fontified t) 45 50 (fontified t) 50 63 (face font-lock-string-face fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 65 (fontified t)) . 7827) (undo-tree-id68 . -62) (undo-tree-id69 . -18) (undo-tree-id70 . -62) (undo-tree-id71 . -64) (undo-tree-id72 . 47) (undo-tree-id73 . -19) (undo-tree-id74 . -19) (undo-tree-id75 . -44) (undo-tree-id76 . -44) (undo-tree-id77 . -65) (undo-tree-id78 . -65) (undo-tree-id79 . -62) (undo-tree-id80 . -44) (undo-tree-id81 . -65) (undo-tree-id82 . -18) (undo-tree-id83 . -62) 7889 (t 25592 25673 854194 47000)) nil (25592 25927 797747 922000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2888 . 2889) (#("
" 0 1 (fontified nil)) . -2953) (2888 . 2954)) nil (25592 25927 797735 522000) 0 nil])
([nil nil ((2953 . 2954) 2933) nil (25592 25927 797734 222000) 0 nil])
([nil nil ((#("(message \"MODULES-UTILITY\")
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 9 (fontified t) 9 26 (face font-lock-string-face fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 28 (fontified t)) . 2975) (undo-tree-id59 . -27) (undo-tree-id60 . 28) (undo-tree-id61 . -28) (undo-tree-id62 . -28) (undo-tree-id63 . -28) (undo-tree-id64 . 28) (undo-tree-id65 . -1) (undo-tree-id66 . 2) (undo-tree-id67 . -27)) nil (25592 25927 797732 622000) 0 nil])
([nil nil ((2975 . 3003)) nil (25592 25927 797723 222000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2907 . 2908) (#("
" 0 1 (fontified nil)) . -2935) (2907 . 2936) 2889) nil (25592 25927 797722 222000) 0 nil])
([nil nil ((#("UTILITY" 0 7 (face font-lock-string-face fontified t)) . 2926) (undo-tree-id58 . -6)) nil (25592 25927 797720 722000) 0 nil])
([nil nil ((2926 . 2930)) nil (25592 25927 797719 222000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-string-face fontified t)) . -2926) (undo-tree-id54 . -1) (#("F" 0 1 (face font-lock-string-face fontified t)) . -2927) (undo-tree-id55 . -1) (#("F" 0 1 (face font-lock-string-face fontified t)) . -2928) (undo-tree-id56 . -1) (#("E" 0 1 (face font-lock-string-face fontified t)) . -2929) (undo-tree-id57 . -1) 2930) nil (25592 25927 797717 422000) 0 nil])
([nil nil ((2926 . 2928)) nil (25592 25927 797712 922000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -2926) (undo-tree-id52 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2927) (undo-tree-id53 . -1) 2928) nil (25592 25927 797711 722000) 0 nil])
([nil nil ((2926 . 2928)) nil (25592 25927 797709 122000) 0 nil])
([nil nil ((2928 . 2929)) nil (25592 25927 797708 122000) 0 nil])
([nil nil ((2929 . 2932)) nil (25592 25927 797707 122000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -2423) (undo-tree-id51 . -1) 2424) nil (25592 25927 797705 722000) 0 nil])
([nil nil ((2423 . 2424)) nil (25592 25927 797703 622000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-string-face fontified t)) . -2457) (undo-tree-id50 . -1) 2458) nil (25592 25927 797701 822000) 0 nil])
([nil nil ((2457 . 2458)) nil (25592 25927 797699 422000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-string-face fontified t)) . -2696) (undo-tree-id49 . -1) 2697) nil (25592 25927 797698 122000) 0 nil])
([nil nil ((2696 . 2697)) nil (25592 25927 797695 922000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-string-face fontified t)) . -2925) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 2926) nil (25592 25927 797694 322000) 0 nil])
([nil nil ((2925 . 2926)) nil (25592 25927 797690 922000) 0 nil])
([nil nil ((#(";;(load \"search_swiper\")
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 25 (face font-lock-comment-face fontified t)) . 2935) (undo-tree-id41 . -25) (undo-tree-id42 . -25) (undo-tree-id43 . -24) (undo-tree-id44 . 7) (undo-tree-id45 . -25) 2953) nil (25592 25927 797689 222000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-string-face fontified t)) . 2994) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1)) nil (25592 25927 797682 422000) 0 nil])
([nil nil ((2994 . 2995)) nil (25592 25927 797666 22000) 0 nil])
([nil nil ((#(";;(load \"editor_ivy\")                           ;(P) A generic completion mechanism for Emacs.
;;(load \"editor_company\")                       ;(P) Word completion
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 10 (face font-lock-comment-face fontified t) 10 11 (face font-lock-comment-face fontified t) 11 46 (face font-lock-comment-face fontified t) 46 63 (face font-lock-comment-face fontified t) 63 74 (face font-lock-comment-face fontified t) 74 95 (face font-lock-comment-face fontified t) 95 97 (face font-lock-comment-delimiter-face fontified t) 97 164 (face font-lock-comment-face fontified t)) . 3905) (undo-tree-id143 . -113) (undo-tree-id144 . -18) (undo-tree-id145 . -113) (undo-tree-id146 . -163) (undo-tree-id147 . -95) (undo-tree-id148 . -95) (undo-tree-id149 . -164) (undo-tree-id150 . -164) (undo-tree-id151 . -95) (undo-tree-id152 . -164) (undo-tree-id153 . -113) (undo-tree-id154 . -18) (undo-tree-id155 . -113) 4018 (t 25592 25927 904190 880000)) nil (25592 26149 101153 89000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9844 . 9845) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -10008) (9844 . 10009) 9758) nil (25592 26149 101015 989000) 0 nil])
([nil nil ((7856 . 7857)) nil (25592 26149 101014 589000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . 7857)) nil (25592 26149 101013 589000) 0 nil])
([nil nil ((8570 . 8578)) nil (25592 26149 101012 589000) 0 nil])
([nil nil ((8578 . 8585)) nil (25592 26149 101011 689000) 0 nil])
([nil nil ((8585 . 8586)) nil (25592 26149 101010 889000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-comment-face fontified t)) . -8585) (undo-tree-id142 . -1) 8586) nil (25592 26149 101009 789000) 0 nil])
([nil nil ((8589 . 8591) (#("k" 0 1 (face font-lock-comment-face fontified t)) . -8589) (undo-tree-id141 . -1) (8585 . 8590)) nil (25592 26149 101007 789000) 0 nil])
([nil nil ((8591 . 8592)) nil (25592 26149 101005 689000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-comment-face fontified t)) . -8591) (undo-tree-id140 . -1) 8592) nil (25592 26149 101004 589000) 0 nil])
([nil nil ((8591 . 8594)) nil (25592 26149 101002 789000) 0 nil])
([nil nil ((#("(load \"org_fancy-priorities\")                ;(P)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (fontified t) 6 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 45 (fontified t) 45 46 (face font-lock-comment-delimiter-face fontified t) 46 50 (face font-lock-comment-face fontified t)) . 8745) (undo-tree-id138 . -49) (undo-tree-id139 . -50) 8769) nil (25592 26149 101001 689000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8594 . 8595) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -8644) (8594 . 8645)) nil (25592 26149 100999 89000) 0 nil])
([nil nil ((#("(load \"org_treeusage\")                          ;(P)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (fontified t) 6 21 (face font-lock-string-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 48 (fontified t) 48 49 (face font-lock-comment-delimiter-face fontified t) 49 53 (face font-lock-comment-face fontified t)) . 9043) (undo-tree-id132 . -52) (undo-tree-id133 . -53) (undo-tree-id134 . 53) (undo-tree-id135 . -1) (undo-tree-id136 . 32) (undo-tree-id137 . -22)) nil (25592 26149 100997 289000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8644 . 8645) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -8697) (8644 . 8698) 8595) nil (25592 26149 100991 489000) 0 nil])
([nil nil ((8624 . 8627)) nil (25592 26149 100989 889000) 0 nil])
([nil nil ((#(";;(load \"editor_swiper\")                      ;(P) Uses ivy to show an overview of all matches.
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 96 (face font-lock-comment-face fontified t)) . 3906) (undo-tree-id130 . -95) (undo-tree-id131 . -96) 3939) nil (25592 26149 100988 689000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3905) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . 1) (undo-tree-id129 . -1)) nil (25592 26149 100985 589000) 0 nil])
([nil nil ((#(";;(load \"editor_deft\")                        ;(P) Find a file inside of a chosen folder.
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t) 2 49 (face font-lock-comment-face fontified t) 49 90 (face font-lock-comment-face fontified t)) . 4195) (undo-tree-id122 . -90) (undo-tree-id123 . -90) (undo-tree-id124 . -89) (undo-tree-id125 . -90)) nil (25592 26149 100981 489000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9779 . 9780) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -9869) (9779 . 9870) 9685) nil (25592 26149 100977 89000) 0 nil])
([nil nil ((8911 . 8912) 8859) nil (25592 26149 100975 489000) 0 nil])
([nil nil ((8407 . 8408) 8383) nil (25592 26149 100974 489000) 0 nil])
([nil nil ((8408 . 8415)) nil (25592 26149 100973 389000) 0 nil])
([nil nil ((8415 . 8416)) nil (25592 26149 100972 489000) 0 nil])
([nil nil ((8416 . 8420)) nil (25592 26149 100971 589000) 0 nil])
([nil nil ((8420 . 8421)) nil (25592 26149 100970 589000) 0 nil])
([nil nil ((8421 . 8424)) nil (25592 26149 100969 689000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-comment-face fontified t)) . -8416) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -8417) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -8418) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -8419) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -8420) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -8421) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -8422) (undo-tree-id120 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -8423) (undo-tree-id121 . -1) 8424) nil (25592 26149 100966 589000) 0 nil])
([nil nil ((8416 . 8418)) nil (25592 26149 100954 389000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -8416) (undo-tree-id106 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -8417) (undo-tree-id107 . -1) 8418) nil (25592 26149 100952 889000) 0 nil])
([nil nil ((8416 . 8420)) nil (25592 26149 100949 989000) 0 nil])
([nil nil ((8420 . 8421)) nil (25592 26149 100948 989000) 0 nil])
([nil nil ((8421 . 8423)) nil (25592 26149 100947 889000) 0 nil])
([nil nil ((#(";;; org-general
" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 15 (face font-lock-comment-face fontified t) 15 16 (face font-lock-comment-face fontified t rear-nonsticky t)) . 8408) (undo-tree-id100 . -15) (undo-tree-id101 . 1) (undo-tree-id102 . -16) (undo-tree-id103 . -16) (undo-tree-id104 . -16) (undo-tree-id105 . -15) 8423) nil (25592 26149 100946 189000) 0 nil])
([nil nil ((#(";;; org-packages
" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 16 (face font-lock-comment-face fontified t) 16 17 (face font-lock-comment-face fontified t)) . 8913) (undo-tree-id98 . -16) (undo-tree-id99 . -17) 8928) nil (25592 26149 100809 289000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8912) (undo-tree-id97 . -1)) nil (25592 26149 100806 689000) 0 nil])
([nil nil ((#(";; (load \"org_export\")                          ;(P) Export Org-file to html.
;; (load \"org_exsty\")                           ;(P) Org-Setup helpers.
;; (load \"org_helm-org-rifle\")                  ;(P) Searches rapidly through Org files.
;; (load \"org_noter\")                           ;(P)
;; (load \"org_code-blocks\")                     ;(P)
;; (load \"org_ref\")                             ;(P)
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 8 (face font-lock-comment-face fontified t) 8 75 (face font-lock-comment-face fontified t) 75 78 (face font-lock-comment-face fontified t) 78 81 (face font-lock-comment-delimiter-face fontified t) 81 150 (face font-lock-comment-face fontified t) 150 153 (face font-lock-comment-delimiter-face fontified t) 153 189 (face font-lock-comment-face fontified t) 189 238 (face font-lock-comment-face fontified t) 238 239 (face font-lock-comment-face fontified t) 239 242 (face font-lock-comment-delimiter-face fontified t) 242 292 (face font-lock-comment-face fontified t) 292 295 (face font-lock-comment-delimiter-face fontified t) 295 345 (face font-lock-comment-face fontified t) 345 348 (face font-lock-comment-delimiter-face fontified t) 348 397 (face font-lock-comment-face fontified t) 397 398 (face font-lock-comment-face fontified t)) . 8514) (undo-tree-id90 . -345) (undo-tree-id91 . -345) (undo-tree-id92 . -397) (undo-tree-id93 . -345) (undo-tree-id94 . -398) (undo-tree-id95 . -345) (undo-tree-id96 . -345) 8859) nil (25592 26149 100804 589000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8905 . 8906) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -9303) (8905 . 9304) 8852) nil (25592 26149 100796 889000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8134) (undo-tree-id89 . -1)) nil (25592 26149 100794 89000) 0 nil])
([nil nil ((#(";;; modules-compare
" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 20 (face font-lock-comment-face fontified t)) . 7545) (undo-tree-id85 . -19) (undo-tree-id86 . -20) (undo-tree-id87 . -20) (undo-tree-id88 . -20)) nil (25592 26149 100787 489000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 8963) (t 25592 26149 194218 491000)) nil (25592 27043 55655 714000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 8963)) nil (25592 27043 55653 514000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8963)) nil (25592 27043 55647 114000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8694 . 8695) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -8795) (8694 . 8796) 8594 (t 25592 27043 234205 171000)) nil (25592 27166 577649 355000) 0 nil])
([nil nil ((#("roam" 0 4 (face font-lock-string-face fontified t)) . 8706) (undo-tree-id170 . -3)) nil (25592 27166 577647 355000) 0 nil])
([nil nil ((8706 . 8707)) nil (25592 27166 577645 755000) 0 nil])
([nil nil ((8707 . 8713)) nil (25592 27166 577644 755000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8742)) nil (25592 27166 577643 255000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8742)) nil (25592 27166 577641 955000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8742)) nil (25592 27166 577640 855000) 0 nil])
([nil nil ((#("(P) Roma, Company, Nroam, Server, Bibtex, Templates" 0 51 (face font-lock-comment-face fontified t)) . 8744) (undo-tree-id164 . -51) (undo-tree-id165 . -50) (undo-tree-id166 . 51) (undo-tree-id167 . -1) (undo-tree-id168 . 49) (undo-tree-id169 . -3)) nil (25592 27166 577639 155000) 0 nil])
([nil nil ((8744 . 8751)) nil (25592 27166 577633 155000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-comment-face fontified t)) . -8745) (undo-tree-id158 . -1) (#("m" 0 1 (face font-lock-comment-face fontified t)) . -8746) (undo-tree-id159 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -8747) (undo-tree-id160 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -8748) (undo-tree-id161 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -8749) (undo-tree-id162 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -8750) (undo-tree-id163 . -1) 8751) nil (25592 27166 577630 555000) 0 nil])
([nil nil ((8745 . 8748)) nil (25592 27166 577622 855000) 0 nil])
([nil nil ((8748 . 8758)) nil (25592 27166 577621 855000) 0 nil])
([nil nil ((8758 . 8766) (#("k" 0 1 (face font-lock-comment-face fontified t)) . -8758) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (8758 . 8759)) nil (25592 27166 577619 755000) 0 nil])
([nil nil ((8766 . 8767)) nil (25592 27166 577607 955000) 0 nil])
([nil nil ((8767 . 8771)) nil (25592 27166 577605 955000) 0 nil])
([nil nil ((8771 . 8772)) nil (25592 27166 577600 355000) 0 nil])
([nil nil ((#(";;; modules-navigation" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 22 (face font-lock-comment-face fontified t)) . 4692) (undo-tree-id178 . -21) (t 25592 27166 674210 870000)) nil (25592 40826 405483 335000) 0 nil])
([nil nil ((#("(load \"store_browse-kill-ring\")               ;(P) Interactively insert item from kill-ring." 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (fontified t) 6 30 (face font-lock-string-face fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 46 (fontified t) 46 47 (face font-lock-comment-delimiter-face fontified t) 47 92 (face font-lock-comment-face fontified t)) . 4712) (undo-tree-id171 . 55) (undo-tree-id172 . -36) (undo-tree-id173 . -91) (undo-tree-id174 . 92) (undo-tree-id175 . -1) (undo-tree-id176 . 62) (undo-tree-id177 . -31)) nil (25592 40826 405480 735000) 0 nil])
([nil nil ((4712 . 4804)) nil (25592 40826 405465 335000) 0 nil])
([nil nil ((3185 . 3186) 3092) nil (25592 40826 405464 435000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3185 . 3186) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -3272) (3185 . 3273) 3092) nil (25592 40826 405462 935000) 0 nil])
([nil nil ((3201 . 3205)) nil (25592 40826 405461 335000) 0 nil])
([nil nil ((3205 . 3206)) nil (25592 40826 405459 535000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t)) . 3206) (#("f" 0 1 (face font-lock-string-face fontified t)) . 3206) (#("-" 0 1 (face font-lock-string-face fontified t)) . 3206) (#("o" 0 1 (face font-lock-string-face fontified t)) . 3206) (#("d" 0 1 (face font-lock-string-face fontified t)) . 3206) (#("n" 0 1 (face font-lock-string-face fontified t)) . 3206) (#("u" 0 1 (face font-lock-string-face fontified t)) . 3206)) nil (25592 40826 405451 635000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3267 . 3268) (nil fontified nil 3229 . 3268) (3229 . 3268) 3228 (t 25592 40826 513077 830000)) nil (25592 40901 346924 827000) 0 nil])
([nil nil ((#(" User-friendly undo/redo system for users" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 8 (face font-lock-comment-face fontified t) 8 41 (face font-lock-comment-face fontified t)) . 3268) (undo-tree-id182 . -40) (undo-tree-id183 . -41)) nil (25592 40901 346921 227000) 0 nil])
([nil nil ((3228 . 3230)) nil (25592 40901 346915 827000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . 3269) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1)) nil (25592 40901 346908 427000) 0 nil])
([nil nil ((3271 . 3272) (t 25592 40901 433058 137000)) nil (25592 41000 886784 802000) 0 nil])
([nil nil ((3349 . 3350)) nil (25592 41000 886782 902000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3271) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) 3272) nil (25592 41000 886772 102000) 0 nil])
([nil nil ((#("store" 0 5 (face font-lock-string-face fontified t)) . 3278) (undo-tree-id286 . -4) (t 25592 41000 983076 448000)) nil (25592 41543 133076 719000) 0 nil])
([nil nil ((3278 . 3281)) nil (25592 41543 133065 119000) 0 nil])
([nil nil ((3281 . 3285)) nil (25592 41543 133059 219000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3270) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (t 25592 41543 223062 828000)) nil (25592 41547 485996 531000) 0 nil])
([nil nil ((2955 . 2963) (t 25592 41547 583063 240000)) nil (25592 41776 718218 956000) 0 nil])
([nil nil ((2963 . 2967)) nil (25592 41776 718217 956000) 0 nil])
([nil nil ((2967 . 2971)) nil (25592 41776 718217 56000) 0 nil])
([nil nil ((2971 . 2975)) nil (25592 41776 718216 56000) 0 nil])
([nil nil ((2975 . 2979)) nil (25592 41776 718215 156000) 0 nil])
([nil nil ((2979 . 2980)) nil (25592 41776 718214 456000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3330)) nil (25592 41776 718213 456000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3330)) nil (25592 41776 718212 156000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 3407)) nil (25592 41776 718211 156000) 0 nil])
([nil nil ((#(";(load \"store_undo-tree\")                   ;(P) Allows you to recover  any past state of a buffer;.
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 7 (face font-lock-comment-face fontified t) 7 24 (face font-lock-comment-face fontified t) 24 25 (face font-lock-comment-face fontified t) 25 44 (face font-lock-comment-face fontified t) 44 45 (face font-lock-comment-face fontified t) 45 101 (face font-lock-comment-face fontified t)) . 3372) (undo-tree-id303 . -100) (undo-tree-id304 . -101) (undo-tree-id305 . -101) (undo-tree-id306 . -101) (undo-tree-id307 . 56) (undo-tree-id308 . -46) (undo-tree-id309 . 54) (undo-tree-id310 . -48) 3417) nil (25592 41776 718209 656000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9961 . 9962) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -10062) (9961 . 10063) 9893) nil (25592 41776 718201 556000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9932)) nil (25592 41776 718199 756000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9932)) nil (25592 41776 718198 956000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9932)) nil (25592 41776 718197 956000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9932)) nil (25592 41776 718196 956000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9842)) nil (25592 41776 718196 56000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9842)) nil (25592 41776 718194 856000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9747)) nil (25592 41776 718193 856000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9747)) nil (25592 41776 718192 756000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9747)) nil (25592 41776 718191 756000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9747)) nil (25592 41776 718190 756000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9492)) nil (25592 41776 718189 656000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9492)) nil (25592 41776 718188 756000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9492)) nil (25592 41776 718187 756000) 0 nil])
([nil nil ((9492 . 9493)) nil (25592 41776 718186 956000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9408) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9408) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9408) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9408)) nil (25592 41776 718185 456000) 0 nil])
([nil nil ((9520 . 9523)) nil (25592 41776 718183 956000) 0 nil])
([nil nil ((9523 . 9527)) nil (25592 41776 718183 56000) 0 nil])
([nil nil ((9527 . 9531)) nil (25592 41776 718182 156000) 0 nil])
([nil nil ((9531 . 9535)) nil (25592 41776 718181 156000) 0 nil])
([nil nil ((9535 . 9539)) nil (25592 41776 718180 156000) 0 nil])
([nil nil ((9539 . 9540)) nil (25592 41776 718179 356000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9413) (#(")" 0 1 (face font-lock-comment-face fontified t)) . 9413) (#("P" 0 1 (face font-lock-comment-face fontified t)) . 9413) (#("(" 0 1 (face font-lock-comment-face fontified t)) . 9413) (undo-tree-id301 . 1) (undo-tree-id302 . -1)) nil (25592 41776 718177 556000) 0 nil])
([nil nil ((9413 . 9414)) nil (25592 41776 718174 456000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . -9583) (undo-tree-id300 . -1) 9584) nil (25592 41776 718173 256000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 9583) (#("P" 0 1 (face font-lock-comment-face fontified t)) . 9583)) nil (25592 41776 718171 156000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 9674) (#("F" 0 1 (face font-lock-comment-face fontified t)) . 9674) (#("(" 0 1 (face font-lock-comment-face fontified t)) . 9674) (undo-tree-id298 . 1) (undo-tree-id299 . -1) (#("!" 0 1 (face font-lock-comment-face fontified t)) . 9674)) nil (25592 41776 718169 156000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9757) (#(")" 0 1 (face font-lock-comment-face fontified t)) . 9757) (#("P" 0 1 (face font-lock-comment-face fontified t)) . 9757) (#("(" 0 1 (face font-lock-comment-face fontified t)) . 9757) (undo-tree-id296 . 1) (undo-tree-id297 . -1)) nil (25592 41776 718165 156000) 0 nil])
([nil nil ((9757 . 9758)) nil (25592 41776 718162 56000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . -9845) (undo-tree-id295 . -1) 9846) nil (25592 41776 718160 656000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 9845) (#("P" 0 1 (face font-lock-comment-face fontified t)) . 9845)) nil (25592 41776 718157 956000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 9995) (#("P" 0 1 (face font-lock-comment-face fontified t)) . 9995) (#("(" 0 1 (face font-lock-comment-face fontified t)) . 9995) (undo-tree-id293 . 1) (undo-tree-id294 . -1)) nil (25592 41776 718155 256000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 9930) (#("P" 0 1 (face font-lock-comment-face fontified t)) . 9930) (#("(" 0 1 (face font-lock-comment-face fontified t)) . 9930) (undo-tree-id291 . 1) (undo-tree-id292 . -1)) nil (25592 41776 718147 856000) 0 nil])
([nil nil ((#("(load \"org_exsty\")                           ;(P) Org-Setup helpers.
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (fontified t) 6 17 (face font-lock-string-face fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 24 (fontified t) 24 45 (fontified t) 45 46 (face font-lock-comment-delimiter-face fontified t) 46 69 (face font-lock-comment-face fontified t)) . 9027) (undo-tree-id388 . -68) (undo-tree-id389 . -69) 9072 (t 25592 41776 823067 59000)) nil (25592 41874 973657 311000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8816 . 8817) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -8885) (8816 . 8886) 8804) nil (25592 41874 973654 111000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9367 . 9368) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -9454) (9367 . 9455)) nil (25592 41874 973652 411000) 0 nil])
([nil nil ((#("(load \"navigation_orderless\")               ; Search completion for matching patterns.
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (fontified t) 6 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 44 (fontified t) 44 46 (face font-lock-comment-delimiter-face fontified t) 46 86 (face font-lock-comment-face fontified t) 86 87 (face font-lock-comment-face fontified t)) . 9368) (undo-tree-id381 . -86) (undo-tree-id382 . -86) (undo-tree-id383 . -87) (undo-tree-id384 . 87) (undo-tree-id385 . -1) (undo-tree-id386 . 59) (undo-tree-id387 . -29)) nil (25592 41874 973650 611000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -9335) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -9336) (undo-tree-id378 . 1) (undo-tree-id379 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -9337) (undo-tree-id380 . -1) 9338) nil (25592 41874 973643 311000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -9334) (undo-tree-id374 . -1) (undo-tree-id375 . -1) 9335) nil (25592 41874 973637 711000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9281) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9281) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9281) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9281)) nil (25592 41874 973634 11000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9228) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9228) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9228) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9228)) nil (25592 41874 973631 911000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9139) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9139) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9139) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9139)) nil (25592 41874 973629 611000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9061) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9061) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9061) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9061)) nil (25592 41874 973627 311000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9007) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9007) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9007) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9007) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 9007)) nil (25592 41874 973625 11000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 8929) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 8929) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 8929) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 8929) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 8929) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 8929)) nil (25592 41874 973622 311000) 0 nil])
([nil nil ((8929 . 8930)) nil (25592 41874 973620 511000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8861)) nil (25592 41874 973619 111000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8803) (#(" " 0 1 (fontified t)) . 8803) (#(" " 0 1 (fontified t)) . 8803) (#(" " 0 1 (fontified t)) . 8803) (#(" " 0 1 (fontified t)) . 8803) (#(" " 0 1 (fontified t)) . 8803) (#(" " 0 1 (fontified t)) . 8803) (#(" " 0 1 (fontified t)) . 8803) (#(" " 0 1 (fontified t)) . 8803)) nil (25592 41874 973616 611000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 8725) (#(" " 0 1 (fontified t)) . 8725) (#(" " 0 1 (fontified t)) . 8725) (#(" " 0 1 (fontified t)) . 8725) (#(" " 0 1 (fontified t)) . 8725)) nil (25592 41874 973612 911000) 0 nil])
([nil nil ((8725 . 8726)) nil (25592 41874 973611 111000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8624) (undo-tree-id373 . -1) 8625) nil (25592 41874 973609 711000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8624) (#(" " 0 1 (fontified t)) . 8624) (#(" " 0 1 (fontified t)) . 8624)) nil (25592 41874 973607 11000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8523) (#(" " 0 1 (fontified t)) . 8523) (#(" " 0 1 (fontified t)) . 8523) (#(" " 0 1 (fontified t)) . 8523)) nil (25592 41874 973605 11000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8470) (#(" " 0 1 (fontified t)) . 8470) (#(" " 0 1 (fontified t)) . 8470) (#(" " 0 1 (fontified t)) . 8470)) nil (25592 41874 973602 911000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8417) (#(" " 0 1 (fontified t)) . 8417) (#(" " 0 1 (fontified t)) . 8417) (#(" " 0 1 (fontified t)) . 8417)) nil (25592 41874 973600 811000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 8418) (undo-tree-id370 . 1) (undo-tree-id371 . 1) (undo-tree-id372 . -1)) nil (25592 41874 973598 911000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 8418) (undo-tree-id369 . 1)) nil (25592 41874 973595 511000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 8418) (undo-tree-id366 . 1) (undo-tree-id367 . 1) (undo-tree-id368 . -1)) nil (25592 41874 973593 511000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 8464) (undo-tree-id364 . 1) (undo-tree-id365 . -1)) nil (25592 41874 973590 111000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 8464)) nil (25592 41874 973587 511000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 8464) (undo-tree-id362 . 1) (undo-tree-id363 . -1)) nil (25592 41874 973586 311000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 8510) (undo-tree-id360 . 1) (undo-tree-id361 . -1)) nil (25592 41874 973583 611000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 8510)) nil (25592 41874 973580 611000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 8510) (undo-tree-id358 . 1) (undo-tree-id359 . -1)) nil (25592 41874 973579 511000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 8604) (undo-tree-id356 . 1) (undo-tree-id357 . -1)) nil (25592 41874 973576 911000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 8604)) nil (25592 41874 973574 411000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 8604) (undo-tree-id354 . 1) (undo-tree-id355 . -1)) nil (25592 41874 973573 211000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 8772) (undo-tree-id352 . 1) (undo-tree-id353 . -1)) nil (25592 41874 973570 611000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 8772)) nil (25592 41874 973568 111000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 8772) (undo-tree-id350 . 1) (undo-tree-id351 . -1)) nil (25592 41874 973567 11000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 8886) (undo-tree-id348 . 1) (undo-tree-id349 . -1)) nil (25592 41874 973564 411000) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-comment-face fontified t)) . 8886)) nil (25592 41874 973562 111000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 8886) (undo-tree-id346 . 1) (undo-tree-id347 . -1)) nil (25592 41874 973561 11000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 8956) (undo-tree-id344 . 1) (undo-tree-id345 . -1)) nil (25592 41874 973558 211000) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-comment-face fontified t)) . 8956)) nil (25592 41874 973555 711000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 8956) (undo-tree-id342 . 1) (undo-tree-id343 . -1)) nil (25592 41874 973554 611000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 9002) (undo-tree-id340 . 1) (undo-tree-id341 . -1)) nil (25592 41874 973551 811000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 9002)) nil (25592 41874 973549 311000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 9002) (undo-tree-id338 . 1) (undo-tree-id339 . -1)) nil (25592 41874 973548 11000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 9073) (undo-tree-id336 . 1) (undo-tree-id337 . -1)) nil (25592 41874 973545 511000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 9073)) nil (25592 41874 973542 911000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 9073) (undo-tree-id334 . 1) (undo-tree-id335 . -1)) nil (25592 41874 973541 711000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 9155) (undo-tree-id332 . 1) (undo-tree-id333 . -1)) nil (25592 41874 973539 11000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 9155)) nil (25592 41874 973536 311000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 9155) (undo-tree-id330 . 1) (undo-tree-id331 . -1)) nil (25592 41874 973535 111000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 9201) (undo-tree-id328 . 1) (undo-tree-id329 . -1)) nil (25592 41874 973532 511000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 9201)) nil (25592 41874 973529 711000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 9201) (undo-tree-id326 . 1) (undo-tree-id327 . -1)) nil (25592 41874 973528 311000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 9247) (undo-tree-id324 . 1) (undo-tree-id325 . -1)) nil (25592 41874 973525 411000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 9247)) nil (25592 41874 973522 611000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 9247) (undo-tree-id321 . -1) (undo-tree-id322 . 1) (undo-tree-id323 . -1)) nil (25592 41874 973521 311000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . 8818) (undo-tree-id317 . 1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1)) nil (25592 41874 973517 311000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 8818) (undo-tree-id315 . -1) (undo-tree-id316 . -1)) nil (25592 41874 973511 711000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 8818) (undo-tree-id311 . 1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1)) nil (25592 41874 973504 611000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3597) (undo-tree-id444 . -1) (#(" " 0 1 (fontified t)) . -3598) (undo-tree-id445 . -1) 3599 (t 25592 41875 73066 920000)) nil (25592 42157 22007 170000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3794) (#(" " 0 1 (fontified t)) . 3794)) nil (25592 42157 22003 770000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3873) (#(" " 0 1 (fontified t)) . 3873)) nil (25592 42157 22002 70000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4475) (#(" " 0 1 (fontified t)) . 4475)) nil (25592 42157 22000 670000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 4538) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 4538) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 4538) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 4538)) nil (25592 42157 21998 970000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4651) (#(" " 0 1 (fontified t)) . 4651)) nil (25592 42157 21997 270000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4749) (#(" " 0 1 (fontified t)) . 4749)) nil (25592 42157 21995 870000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4840) (#(" " 0 1 (fontified t)) . 4840)) nil (25592 42157 21994 170000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4931) (#(" " 0 1 (fontified t)) . 4931) (#(" " 0 1 (fontified t)) . 4931)) nil (25592 42157 21992 570000) 0 nil])
([nil nil ((4931 . 4932)) nil (25592 42157 21991 370000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028)) nil (25592 42157 21990 70000) 0 nil])
([nil nil ((5028 . 5029)) nil (25592 42157 21988 770000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5107) (#(" " 0 1 (fontified t)) . 5107)) nil (25592 42157 21987 570000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5192) (#(" " 0 1 (fontified t)) . 5192)) nil (25592 42157 21986 170000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5288) (#(" " 0 1 (fontified t)) . 5288)) nil (25592 42157 21984 870000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5448) (#(" " 0 1 (fontified t)) . 5448)) nil (25592 42157 21983 470000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5373) (#(" " 0 1 (fontified t)) . 5373)) nil (25592 42157 21982 70000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 5516) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 5516) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 5516) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 5516)) nil (25592 42157 21980 370000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 5611) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 5611) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 5611)) nil (25592 42157 21978 470000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 5680) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 5680) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 5680)) nil (25592 42157 21976 470000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5778) (#(" " 0 1 (fontified t)) . 5778)) nil (25592 42157 21974 770000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5844) (#(" " 0 1 (fontified t)) . 5844)) nil (25592 42157 21973 370000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5893) (#(" " 0 1 (fontified t)) . 5893)) nil (25592 42157 21971 670000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5959) (#(" " 0 1 (fontified t)) . 5959) (#(" " 0 1 (fontified t)) . 5959) (#(" " 0 1 (fontified t)) . 5959) (#(" " 0 1 (fontified t)) . 5959) (#(" " 0 1 (fontified t)) . 5959)) nil (25592 42157 21969 470000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6025) (#(" " 0 1 (fontified t)) . 6025) (#(" " 0 1 (fontified t)) . 6025) (#(" " 0 1 (fontified t)) . 6025) (#(" " 0 1 (fontified t)) . 6025) (#(" " 0 1 (fontified t)) . 6025)) nil (25592 42157 21966 370000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6091) (#(" " 0 1 (fontified t)) . 6091) (#(" " 0 1 (fontified t)) . 6091)) nil (25592 42157 21963 670000) 0 nil])
([nil nil ((6135 . 6137)) nil (25592 42157 21962 170000) 0 nil])
([nil nil ((6137 . 6141)) nil (25592 42157 21961 270000) 0 nil])
([nil nil ((6141 . 6145)) nil (25592 42157 21960 170000) 0 nil])
([nil nil ((6145 . 6149)) nil (25592 42157 21959 170000) 0 nil])
([nil nil ((6149 . 6153)) nil (25592 42157 21958 270000) 0 nil])
([nil nil ((6153 . 6157)) nil (25592 42157 21957 170000) 0 nil])
([nil nil ((6157 . 6158)) nil (25592 42157 21956 170000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6203) (#(" " 0 1 (fontified t)) . 6203)) nil (25592 42157 21954 870000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 6204) (#("P" 0 1 (face font-lock-comment-face fontified t)) . 6204) (#("(" 0 1 (face font-lock-comment-face fontified t)) . 6204) (undo-tree-id442 . 1) (undo-tree-id443 . -1)) nil (25592 42157 21952 870000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 5845) (#("P" 0 1 (face font-lock-comment-face fontified t)) . 5845) (#("(" 0 1 (face font-lock-comment-face fontified t)) . 5845) (undo-tree-id440 . 1) (undo-tree-id441 . -1)) nil (25592 42157 21949 170000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . 5779) (#("P" 0 1 (face font-lock-comment-face fontified t)) . 5779) (#("(" 0 1 (face font-lock-comment-face fontified t)) . 5779) (undo-tree-id438 . 1) (undo-tree-id439 . -1)) nil (25592 42157 21945 570000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6248) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) 6249) nil (25592 42157 21941 970000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6310) (undo-tree-id432 . -1) (#(" " 0 1 (fontified t)) . -6311) (undo-tree-id433 . -1) 6312) nil (25592 42157 21937 270000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6391) (#(" " 0 1 (fontified t)) . 6391)) nil (25592 42157 21934 70000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6467) (#(" " 0 1 (fontified t)) . 6467)) nil (25592 42157 21932 570000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6538) (#(" " 0 1 (fontified t)) . 6538)) nil (25592 42157 21931 270000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6641) (#(" " 0 1 (fontified t)) . 6641)) nil (25592 42157 21929 870000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6690) (#(" " 0 1 (fontified t)) . 6690)) nil (25592 42157 21928 470000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6762) (#(" " 0 1 (fontified t)) . 6762)) nil (25592 42157 21926 970000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6811) (#(" " 0 1 (fontified t)) . 6811)) nil (25592 42157 21925 270000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6860) (#(" " 0 1 (fontified t)) . 6860)) nil (25592 42157 21923 670000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6909) (#(" " 0 1 (fontified t)) . 6909)) nil (25592 42157 21922 270000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6958) (#(" " 0 1 (fontified t)) . 6958)) nil (25592 42157 21920 770000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7054) (#(" " 0 1 (fontified t)) . 7054)) nil (25592 42157 21919 370000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7152) (#(" " 0 1 (fontified t)) . 7152)) nil (25592 42157 21917 770000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7201) (#(" " 0 1 (fontified t)) . 7201)) nil (25592 42157 21916 370000) 0 nil])
([nil nil ((7234 . 7249)) nil (25592 42157 21915 170000) 0 nil])
([nil nil ((7249 . 7251)) nil (25592 42157 21914 270000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 7296) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 7296)) nil (25592 42157 21913 70000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7464) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("
" 0 1 (fontified t)) . -7465) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) 7466) nil (25592 42157 21910 870000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7553) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 7553)) nil (25592 42157 21904 570000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4705) (undo-tree-id422 . -1)) nil (25592 42157 21900 670000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9198 . 9199) (#("
" 0 1 (fontified nil)) . -9225) (9198 . 9226) 9176) nil (25592 42157 21898 570000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9226 . 9227) (nil fontified nil 9209 . 9227) (9209 . 9227) 9208) nil (25592 42157 21896 770000) 0 nil])
([nil nil ((#("MODULES" 0 7 (face font-lock-string-face fontified t)) . 9227) (undo-tree-id421 . -6)) nil (25592 42157 21894 970000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . 9227)) nil (25592 42157 21893 70000) 0 nil])
([nil nil ((#("SEARCH" 0 6 (face font-lock-string-face fontified t)) . 9227) (undo-tree-id420 . -5)) nil (25592 42157 21891 970000) 0 nil])
([nil nil ((9209 . 9216) (#("modules" 0 7 (face font-lock-string-face fontified t)) . 9209)) nil (25592 42157 21889 770000) 0 nil])
([nil nil ((9216 . 9217)) nil (25592 42157 21888 670000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-string-face fontified t)) . 9217)) nil (25592 42157 21887 670000) 0 nil])
([nil nil ((9217 . 9227) (#("depricated" 0 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face rear-nonsticky t fontified t)) . 9217)) nil (25592 42157 21886 270000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . 9187) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1)) nil (25592 42157 21881 870000) 0 nil])
([nil nil ((9187 . 9188)) nil (25592 42157 21841 70000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8302 . 8303) (#("
" 0 1 (fontified nil)) . -8333) (8302 . 8334) 8290 (t 25592 42157 183038 297000)) nil (25592 42279 651411 488000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7569 . 7570) (#("
" 0 1 (fontified nil)) . -7600) (7569 . 7601) 7553) nil (25592 42279 651404 288000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7482 . 7483) (#("
" 0 1 (fontified nil)) . -7513) (7482 . 7514) 7464) nil (25592 42279 651397 988000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7354 . 7355) (#("
" 0 1 (fontified nil)) . -7385) (7354 . 7386) 7326) nil (25592 42279 651391 688000) 0 nil])
([nil nil ((#("DEPRICATED" 0 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t)) . 7373) (undo-tree-id465 . -9)) nil (25592 42279 651385 788000) 0 nil])
([nil nil ((7373 . 7389)) nil (25592 42279 651380 488000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . 7537)) nil (25592 42279 651377 388000) 0 nil])
([nil nil ((7537 . 7543)) nil (25592 42279 651374 288000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-string-face fontified t)) . 7543) (#("E" 0 1 (face font-lock-string-face fontified t)) . 7543) (#("T" 0 1 (face font-lock-string-face fontified t)) . 7543) (#("A" 0 1 (face font-lock-string-face fontified t)) . 7543) (#("C" 0 1 (face font-lock-string-face fontified t)) . 7543) (#("I" 0 1 (face font-lock-string-face fontified t)) . 7543) (#("R" 0 1 (face font-lock-string-face fontified t)) . 7543) (#("P" 0 1 (face font-lock-string-face fontified t)) . 7543) (#("E" 0 1 (face font-lock-string-face fontified t)) . 7543) (#("D" 0 1 (face font-lock-string-face fontified t)) . 7543)) nil (25592 42279 651365 788000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-string-face fontified t)) . -7651) (undo-tree-id455 . -1) (#("E" 0 1 (face font-lock-string-face fontified t)) . -7652) (undo-tree-id456 . -1) (#("P" 0 1 (face font-lock-string-face fontified t)) . -7653) (undo-tree-id457 . -1) (#("R" 0 1 (face font-lock-string-face fontified t)) . -7654) (undo-tree-id458 . -1) (#("I" 0 1 (face font-lock-string-face fontified t)) . -7655) (undo-tree-id459 . -1) (#("C" 0 1 (face font-lock-string-face fontified t)) . -7656) (undo-tree-id460 . -1) (#("A" 0 1 (face font-lock-string-face fontified t)) . -7657) (undo-tree-id461 . -1) (#("T" 0 1 (face font-lock-string-face fontified t)) . -7658) (undo-tree-id462 . -1) (#("E" 0 1 (face font-lock-string-face fontified t)) . -7659) (undo-tree-id463 . -1) (#("D" 0 1 (face font-lock-string-face fontified t)) . -7660) (undo-tree-id464 . -1) 7661) nil (25592 42279 651348 188000) 0 nil])
([nil nil ((7651 . 7655)) nil (25592 42279 651313 388000) 0 nil])
([nil nil ((7655 . 7662)) nil (25592 42279 651310 488000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8397 . 8398) (#("
" 0 1 (fontified nil)) . -8429) (8397 . 8430)) nil (25592 42279 651306 488000) 0 nil])
([nil nil ((#("(message \"MODULES_DEPRICATED\")
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 9 (fontified t) 9 10 (face font-lock-string-face fontified t) 10 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t)) . 8430) (undo-tree-id447 . -30) (undo-tree-id448 . -31) (undo-tree-id449 . -31) (undo-tree-id450 . -31) (undo-tree-id451 . 31) (undo-tree-id452 . -1) (undo-tree-id453 . 2) (undo-tree-id454 . -30)) nil (25592 42279 651299 988000) 0 nil])
([nil nil ((#("DEFAULT" 0 7 (face font-lock-string-face fontified t)) . 8420) (undo-tree-id446 . -6)) nil (25592 42279 651277 588000) 0 nil])
([nil nil ((8420 . 8428)) nil (25592 42279 651264 88000) 0 nil])
([nil nil ((7632 . 7636)) nil (25592 42279 651260 688000) 0 nil])
([nil nil ((7636 . 7640)) nil (25592 42279 651253 388000) 0 nil])
([nil nil ((3371 . 3372) (t 25592 42279 743052 906000) 3317) nil (25593 6275 810968 348000) 0 nil])
([nil nil ((3372 . 3374)) nil (25593 6275 810967 148000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3372) (undo-tree-id57 . -1) (#("o" 0 1 (fontified t)) . -3373) (undo-tree-id58 . -1) 3374) nil (25593 6275 810965 648000) 0 nil])
([nil nil ((3373 . 3376) (3372 . 3374) (#("(" 0 1 (fontified nil face font-lock-comment-face)) . -3372) (3372 . 3373)) nil (25593 6275 810962 748000) 0 nil])
([nil nil ((3376 . 3382)) nil (25593 6275 810961 448000) 0 nil])
([nil nil ((3382 . 3384)) nil (25593 6275 810960 548000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3383) (undo-tree-id56 . -1) 3384) nil (25593 6275 810959 548000) 0 nil])
([nil nil ((3383 . 3384)) nil (25593 6275 810957 848000) 0 nil])
([nil nil ((3384 . 3386)) nil (25593 6275 810957 48000) 0 nil])
([nil nil ((3386 . 3388)) nil (25593 6275 810956 348000) 0 nil])
([nil nil ((3388 . 3389)) nil (25593 6275 810955 648000) 0 nil])
([nil nil ((3389 . 3390)) nil (25593 6275 810954 848000) 0 nil])
([nil nil ((3390 . 3391)) nil (25593 6275 810954 148000) 0 nil])
([nil nil ((3391 . 3392)) nil (25593 6275 810953 248000) 0 nil])
([nil nil ((3392 . 3393)) nil (25593 6275 810952 548000) 0 nil])
([nil nil ((3393 . 3394)) nil (25593 6275 810951 748000) 0 nil])
([nil nil ((3378 . 3382)) nil (25593 6275 810950 748000) 0 nil])
([nil nil ((3382 . 3383)) nil (25593 6275 810949 948000) 0 nil])
([nil nil ((3383 . 3384)) nil (25593 6275 810949 48000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3379) (undo-tree-id51 . -1) (#("i" 0 1 (fontified t)) . -3380) (undo-tree-id52 . -1) (#("l" 0 1 (fontified t)) . -3381) (undo-tree-id53 . -1) (#("i" 0 1 (fontified t)) . -3382) (undo-tree-id54 . -1) (#("t" 0 1 (fontified t)) . -3383) (undo-tree-id55 . -1) 3384) nil (25593 6275 810946 848000) 0 nil])
([nil nil ((3379 . 3381)) nil (25593 6275 810941 848000) 0 nil])
([nil nil ((3381 . 3382)) nil (25593 6275 810941 48000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -3378) (undo-tree-id47 . -1) (#("u" 0 1 (fontified t)) . -3379) (undo-tree-id48 . -1) (#("t" 0 1 (fontified t)) . -3380) (undo-tree-id49 . -1) (#("i" 0 1 (fontified t)) . -3381) (undo-tree-id50 . -1) 3382) nil (25593 6275 810939 48000) 0 nil])
([nil nil ((3379 . 3382) (3378 . 3380) (#("\"" 0 1 (fontified nil)) . -3378) (3378 . 3379)) nil (25593 6275 810934 348000) 0 nil])
([nil nil ((3384 . 3386) (3382 . 3384)) nil (25593 6275 810932 948000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 3386)) nil (25593 6275 810931 848000) 0 nil])
([nil nil ((3386 . 3387)) nil (25593 6275 810931 48000) 0 nil])
([nil nil ((3403 . 3404)) nil (25593 6275 810930 148000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3373) (undo-tree-id46 . -1) (3373 . 3374) 3296) nil (25593 6275 810928 848000) 0 nil])
([nil nil ((3405 . 3425)) nil (25593 6275 810926 848000) 0 nil])
([nil nil ((3425 . 3429)) nil (25593 6275 810926 48000) 0 nil])
([nil nil ((3429 . 3435)) nil (25593 6275 810925 48000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -3419) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -3420) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -3421) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -3422) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -3423) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -3424) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -3425) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -3426) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -3427) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -3428) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -3429) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -3430) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -3431) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -3432) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -3433) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -3434) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 3435) nil (25593 6275 810918 848000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face font-lock-comment-face)) . -3418) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 3419) nil (25593 6275 810893 48000) 0 nil])
([nil nil ((3418 . 3421)) nil (25593 6275 810890 748000) 0 nil])
([nil nil ((3421 . 3423)) nil (25593 6275 810889 648000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t face font-lock-comment-face)) . -3418) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -3419) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -3420) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -3421) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("F" 0 1 (fontified t face font-lock-comment-face)) . -3422) (undo-tree-id11 . -1) 3423) nil (25593 6275 810884 548000) 0 nil])
([nil nil ((3418 . 3419)) nil (25593 6275 810874 948000) 0 nil])
([nil nil ((3419 . 3421)) nil (25593 6275 810873 348000) 0 nil])
([nil nil ((3421 . 3423)) nil (25593 6275 810871 848000) 0 nil])
([nil nil ((3423 . 3436)) nil (25593 6275 810870 248000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-comment-face)) . -3434) (undo-tree-id1 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -3435) (undo-tree-id2 . -1) 3436) nil (25593 6275 810868 48000) 0 nil])
([nil nil ((3434 . 3435)) nil (25593 6275 810862 48000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 3434) (undo-tree-id0 . -1) 2439) nil (25593 6275 810850 748000) 0 nil])
([nil nil ((3434 . 3439) (t 25593 6275 913762 906000)) nil (25593 6341 7014 566000) 0 nil])
([nil nil ((3439 . 3440)) nil (25593 6341 7013 66000) 0 nil])
([nil nil ((3440 . 3448)) nil (25593 6341 7011 566000) 0 nil])
([nil nil ((3436 . 3443)) nil (25593 6341 7010 366000) 0 nil])
([nil nil ((3455 . 3456)) nil (25593 6341 7008 966000) 0 nil])
([nil nil ((3434 . 3440)) nil (25593 6341 7007 566000) 0 nil])
([nil nil ((3462 . 3466)) nil (25593 6341 7005 566000) 0 nil])
([nil nil ((3466 . 3467)) nil (25593 6341 6999 366000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -2980) (undo-tree-id66 . -1) (2980 . 2981) 2981 (t 25593 6341 103769 169000)) nil (25593 6429 214857 573000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -2981) (undo-tree-id65 . -1) (2980 . 2982) (t 25593 6341 103769 169000)) nil (25593 6429 214854 673000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3017 . 3018) (nil fontified nil 2981 . 3018) (2981 . 3018)) nil (25593 6429 214850 173000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -3016) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("" 0 1 (fontified t rear-nonsticky t)) . -3017) (undo-tree-id64 . -1) 3018) nil (25593 6429 214847 73000) 0 nil])
([nil nil ((2363 . 2371) (#("overview" 0 8 (fontified t face font-lock-comment-face)) . 2363)) nil (25593 6429 214827 373000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -3293) (undo-tree-id265 . -1) (3292 . 3294) (t 25593 6429 313765 773000)) nil (25593 8224 632510 783000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 3305)) nil (25593 8224 632508 483000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-comment-face)) . 3389)) nil (25593 8224 632506 683000) 0 nil])
([nil nil ((3389 . 3390)) nil (25593 8224 632505 383000) 0 nil])
([nil nil ((3305 . 3306)) nil (25593 8224 632504 283000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -3305) (undo-tree-id264 . -1) (3305 . 3306)) nil (25593 8224 632502 183000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 3304) (undo-tree-id262 . 1) (undo-tree-id263 . -1)) nil (25593 8224 632499 983000) 0 nil])
([nil nil ((#(") " 0 2 (fontified t face font-lock-comment-face)) . 3378) (undo-tree-id259 . -1) (undo-tree-id260 . 2) (undo-tree-id261 . -1)) nil (25593 8224 632496 483000) 0 nil])
([nil nil ((3378 . 3380)) nil (25593 8224 632493 683000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face font-lock-comment-face)) . 3376) (undo-tree-id257 . 1) (undo-tree-id258 . -1)) nil (25593 8224 632492 483000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-comment-face)) . 3376)) nil (25593 8224 632489 583000) 0 nil])
([nil nil ((#(") " 0 2 (fontified t face font-lock-comment-face)) . 3376) (undo-tree-id254 . -1) (undo-tree-id255 . 2) (undo-tree-id256 . -1)) nil (25593 8224 632488 383000) 0 nil])
([nil nil ((3376 . 3377)) nil (25593 8224 632484 283000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -3377) (undo-tree-id253 . -1) (3377 . 3378)) nil (25593 8224 632482 283000) 0 nil])
([nil nil ((#("(P) " 0 4 (fontified t face font-lock-comment-face)) . 3562) (undo-tree-id248 . -3) (undo-tree-id249 . 4) (undo-tree-id250 . -1) (undo-tree-id251 . 2) (undo-tree-id252 . -3)) nil (25593 8224 632478 483000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -3563) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (3562 . 3564)) nil (25593 8224 632472 683000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face font-lock-comment-face)) . 3633) (undo-tree-id244 . -1) (undo-tree-id245 . -1)) nil (25593 8224 632467 483000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 3633) (undo-tree-id240 . 1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1)) nil (25593 8224 632462 983000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face font-lock-comment-face)) . 3632) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . 1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1)) nil (25593 8224 632439 183000) 0 nil])
([nil nil ((3501 . 3502) (t 25593 8224 740726 405000) 3501) nil (25593 8466 198781 505000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -3514) (undo-tree-id288 . -1) (3502 . 3515)) nil (25593 8466 198779 905000) 0 nil])
([nil nil ((#("(load \"editor_restart\")                     ;(P) Restart Emcs.
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 6 (fontified t) 6 7 (fontified t face font-lock-string-face) 7 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 44 (fontified t) 44 45 (fontified t face font-lock-comment-delimiter-face) 45 63 (fontified t face font-lock-comment-face)) . 4568) (undo-tree-id284 . -63) (undo-tree-id285 . -63) (undo-tree-id286 . -62) (undo-tree-id287 . -63) 4580) nil (25593 8466 198777 505000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3500 . 3501) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -3563) (3500 . 3564) 3417) nil (25593 8466 198772 805000) 0 nil])
([nil nil ((#("P) https://" 0 11 (fontified t face font-lock-comment-face)) . 3799) (undo-tree-id283 . -10)) nil (25593 8466 198771 205000) 0 nil])
([nil nil ((#("github.com" 0 10 (fontified t face font-lock-comment-face)) . 3799) (undo-tree-id282 . -9)) nil (25593 8466 198769 405000) 0 nil])
([nil nil ((#("/Wilfred/" 0 9 (fontified t face font-lock-comment-face)) . 3799) (undo-tree-id281 . -8)) nil (25593 8466 198767 505000) 0 nil])
([nil nil ((#("helpful is an " 0 14 (fontified t face font-lock-comment-face)) . 3799) (undo-tree-id280 . -13)) nil (25593 8466 198765 705000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -3799) (undo-tree-id279 . -1) (3799 . 3800)) nil (25593 8466 198763 505000) 0 nil])
([nil nil ((3799 . 3800)) nil (25593 8466 198761 505000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face font-lock-comment-face)) . -3798) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -3799) (undo-tree-id278 . -1) 3800) nil (25593 8466 198759 705000) 0 nil])
([nil nil ((3798 . 3802)) nil (25593 8466 198753 105000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-comment-face)) . 3802)) nil (25593 8466 198751 405000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t face font-lock-comment-face)) . -3798) (undo-tree-id271 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -3799) (undo-tree-id272 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -3800) (undo-tree-id273 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -3801) (undo-tree-id274 . -1) 3802) nil (25593 8466 198748 305000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-comment-face)) . 3798)) nil (25593 8466 198740 5000) 0 nil])
([nil nil ((3798 . 3801)) nil (25593 8466 198739 5000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -3824) (undo-tree-id270 . -1) (3824 . 3825) 3823) nil (25593 8466 198737 705000) 0 nil])
([nil nil ((#("Emacs" 0 5 (fontified t face font-lock-comment-face)) . 3827) (undo-tree-id269 . -4)) nil (25593 8466 198734 905000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -3833) (undo-tree-id268 . -1) (3832 . 3834)) nil (25593 8466 198732 105000) 0 nil])
([nil nil ((#(" that provides much more contextual information." 0 48 (fontified t face font-lock-comment-face)) . 3833) (undo-tree-id266 . -47) (undo-tree-id267 . 48)) nil (25593 8466 198725 405000) 0 nil])
([nil nil ((5606 . 5675) 5623 (t 25593 8466 310731 604000)) nil (25593 10811 244789 973000) 0 nil])
([nil nil ((5606 . 5675)) nil (25593 10811 244788 173000) 0 nil])
([nil nil ((#("terminal" 0 8 (fontified t face font-lock-comment-face)) . 5614) (undo-tree-id331 . -7) (undo-tree-id332 . -4) (undo-tree-id333 . -5) (undo-tree-id334 . -5) (undo-tree-id335 . -5) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -6) (undo-tree-id341 . -7) (undo-tree-id342 . -8) (undo-tree-id343 . -8) (undo-tree-id344 . -8) (undo-tree-id345 . -8) (undo-tree-id346 . -8) (undo-tree-id347 . -8) (undo-tree-id348 . -8) (undo-tree-id349 . -8) (undo-tree-id350 . -8) (undo-tree-id351 . -7) (undo-tree-id352 . -7) (undo-tree-id353 . -7) (undo-tree-id354 . -7) (undo-tree-id355 . -7) (undo-tree-id356 . -7) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (undo-tree-id359 . -7) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -7) (undo-tree-id363 . -7) (undo-tree-id364 . -7) (undo-tree-id365 . -7) (undo-tree-id366 . -7) (undo-tree-id367 . -7) (undo-tree-id368 . -7) (undo-tree-id369 . -7) (undo-tree-id370 . -7) (undo-tree-id371 . -7) (undo-tree-id372 . -7) (undo-tree-id373 . -7) (undo-tree-id374 . -6) (undo-tree-id375 . -6) (undo-tree-id376 . -6) (undo-tree-id377 . -6) (undo-tree-id378 . -6) (undo-tree-id379 . -6) (undo-tree-id380 . -6) (undo-tree-id381 . -6) (undo-tree-id382 . -6) (undo-tree-id383 . -6) (undo-tree-id384 . -6) (undo-tree-id385 . -6) (undo-tree-id386 . -6) (undo-tree-id387 . -6) (undo-tree-id388 . -6) (undo-tree-id389 . -6) (undo-tree-id390 . -5) (undo-tree-id391 . -5) (undo-tree-id392 . -5) (undo-tree-id393 . -5) (undo-tree-id394 . -5) (undo-tree-id395 . -5) (undo-tree-id396 . -5) (undo-tree-id397 . -5) (undo-tree-id398 . -5) (undo-tree-id399 . -5) (undo-tree-id400 . -5) (undo-tree-id401 . -5) (undo-tree-id402 . -5) (undo-tree-id403 . -5) (undo-tree-id404 . -5) (undo-tree-id405 . -5) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -3) (undo-tree-id423 . -3) (undo-tree-id424 . -3) (undo-tree-id425 . -3) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3) (undo-tree-id435 . -3) (undo-tree-id436 . -3) (undo-tree-id437 . -3) (undo-tree-id438 . -2) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . -2) (undo-tree-id442 . -2) (undo-tree-id443 . -2) (undo-tree-id444 . -2) (undo-tree-id445 . -2) (undo-tree-id446 . -2) (undo-tree-id447 . -2) (undo-tree-id448 . -2) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -8) (undo-tree-id478 . -8)) nil (25593 10811 244778 973000) 0 nil])
([nil nil ((5614 . 5619)) nil (25593 10811 244645 573000) 0 nil])
([nil nil ((#("shell" 0 5 (fontified nil face font-lock-comment-face)) . 5625) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5) (undo-tree-id329 . -5) (undo-tree-id330 . -5) (5614 . 5625) 5619) nil (25593 10811 244642 873000) 0 nil])
([nil nil ((#("Shellscript" 0 11 (fontified nil face font-lock-comment-face)) . 5614) (undo-tree-id299 . -11) (undo-tree-id300 . -11) (undo-tree-id301 . -11) (undo-tree-id302 . -11) (undo-tree-id303 . -11) (undo-tree-id304 . -11) (undo-tree-id305 . -11) (undo-tree-id306 . -11) (undo-tree-id307 . -11) (undo-tree-id308 . -11) (undo-tree-id309 . -11) (undo-tree-id310 . -11) (undo-tree-id311 . -11) (undo-tree-id312 . -11) (undo-tree-id313 . -11) (undo-tree-id314 . -11) (undo-tree-id315 . -11) (undo-tree-id316 . -11) (undo-tree-id317 . -11) (5625 . 5630)) nil (25593 10811 244628 973000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-comment-face)) . 5679)) nil (25593 10811 244610 973000) 0 nil])
([nil nil ((5679 . 5680)) nil (25593 10811 244609 973000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . 5679) (undo-tree-id298 . -1)) nil (25593 10811 244608 773000) 0 nil])
([nil nil ((5679 . 5680)) nil (25593 10811 244606 973000) 0 nil])
([nil nil ((#("terminal" 0 8 (fontified t face font-lock-comment-face)) . 5680) (undo-tree-id296 . -7) (undo-tree-id297 . 8)) nil (25593 10811 244605 573000) 0 nil])
([nil nil ((5680 . 5682)) nil (25593 10811 244602 873000) 0 nil])
([nil nil ((5682 . 5683)) nil (25593 10811 244602 73000) 0 nil])
([nil nil ((#("shell" 0 5 (fontified nil face font-lock-comment-face)) . 5691) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (5680 . 5691) 5684 (5683 . 5685)) nil (25593 10811 244600 573000) 0 nil])
([nil nil ((5691 . 5692)) nil (25593 10811 244597 473000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-comment-face)) . 5691) (undo-tree-id293 . -1)) nil (25593 10811 244596 373000) 0 nil])
([nil nil ((#("ll" 0 2 (fontified nil face font-lock-comment-face)) . 5683) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (#("Shellscript" 0 11 (fontified nil face font-lock-comment-face)) . 5680) (5691 . 5696)) nil (25593 10811 244593 673000) 0 nil])
([nil nil ((5683 . 5684)) nil (25593 10811 244589 873000) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil face font-lock-comment-face)) . 5681) (5680 . 5681) 5685 (5684 . 5685)) nil (25593 10811 244588 373000) 0 nil])
([nil nil ((5748 . 5750) (5746 . 5748)) nil (25593 10811 244586 173000) 0 nil])
([nil nil ((#("ll" 0 2 (fontified nil face font-lock-comment-face)) . 5746) (#("  " 0 2 (fontified t face font-lock-comment-face)) . 5748)) nil (25593 10811 244584 473000) 0 nil])
([nil nil ((#("terminal" 0 8 (fontified t face font-lock-comment-face)) . 5746) (undo-tree-id290 . -7)) nil (25593 10811 244582 873000) 0 nil])
([nil nil ((5746 . 5749)) nil (25593 10811 244580 73000) 0 nil])
([nil nil ((5749 . 5751)) nil (25593 10811 244578 973000) 0 nil])
([nil nil ((#("terinal" 0 7 (fontified t face font-lock-comment-face)) . 5812) (undo-tree-id289 . -6)) nil (25593 10811 244576 373000) 0 nil])
([nil nil ((5812 . 5817)) nil (25593 10811 244560 373000) 0 nil])
([nil nil ((#("term" 0 4 (fontified t face font-lock-comment-face)) . 5620) (undo-tree-id479 . -3) (undo-tree-id480 . 4) (t 25593 10811 320726 282000)) nil (25593 10855 10358 170000) 0 nil])
([nil nil ((5620 . 5623)) nil (25593 10855 10345 170000) 0 nil])
([nil nil ((5642 . 5646)) nil (25593 10855 10343 670000) 0 nil])
([nil nil ((5715 . 5718)) nil (25593 10855 10342 70000) 0 nil])
([nil nil ((5784 . 5787)) nil (25593 10855 10339 670000) 0 nil])
([nil nil ((5855 . 5857)) nil (25593 10855 10331 870000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 3899) (undo-tree-id852 . 1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 3899) (undo-tree-id853 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 3899) (undo-tree-id854 . 1) (undo-tree-id855 . 1) (undo-tree-id856 . -1) (t 25593 10855 50716 469000)) nil (25593 10930 292104 194000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 3975) (undo-tree-id843 . 1) (undo-tree-id844 . 1) (undo-tree-id845 . 1) (undo-tree-id846 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 3975) (undo-tree-id847 . 1) (undo-tree-id848 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 3975) (undo-tree-id849 . 1) (undo-tree-id850 . 1) (undo-tree-id851 . -1)) nil (25593 10930 292096 94000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4049) (undo-tree-id834 . 1) (undo-tree-id835 . 1) (undo-tree-id836 . 1) (undo-tree-id837 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 4049) (undo-tree-id838 . 1) (undo-tree-id839 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4049) (undo-tree-id840 . 1) (undo-tree-id841 . 1) (undo-tree-id842 . -1)) nil (25593 10930 292082 494000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4125) (undo-tree-id825 . 1) (undo-tree-id826 . 1) (undo-tree-id827 . 1) (undo-tree-id828 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 4125) (undo-tree-id829 . 1) (undo-tree-id830 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4125) (undo-tree-id831 . 1) (undo-tree-id832 . 1) (undo-tree-id833 . -1)) nil (25593 10930 292071 594000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4185) (undo-tree-id816 . 1) (undo-tree-id817 . 1) (undo-tree-id818 . 1) (undo-tree-id819 . -1) (#("F" 0 1 (fontified t face font-lock-comment-face)) . 4185) (undo-tree-id820 . 1) (undo-tree-id821 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4185) (undo-tree-id822 . 1) (undo-tree-id823 . 1) (undo-tree-id824 . -1)) nil (25593 10930 292060 194000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4254) (undo-tree-id807 . 1) (undo-tree-id808 . 1) (undo-tree-id809 . 1) (undo-tree-id810 . -1) (#("F" 0 1 (fontified t face font-lock-comment-face)) . 4254) (undo-tree-id811 . 1) (undo-tree-id812 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4254) (undo-tree-id813 . 1) (undo-tree-id814 . 1) (undo-tree-id815 . -1)) nil (25593 10930 292047 494000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4327) (undo-tree-id798 . 1) (undo-tree-id799 . 1) (undo-tree-id800 . 1) (undo-tree-id801 . -1) (#("F" 0 1 (fontified t face font-lock-comment-face)) . 4327) (undo-tree-id802 . 1) (undo-tree-id803 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4327) (undo-tree-id804 . 1) (undo-tree-id805 . 1) (undo-tree-id806 . -1)) nil (25593 10930 292036 294000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4389) (undo-tree-id789 . 1) (undo-tree-id790 . 1) (undo-tree-id791 . 1) (undo-tree-id792 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 4389) (undo-tree-id793 . 1) (undo-tree-id794 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4389) (undo-tree-id795 . 1) (undo-tree-id796 . 1) (undo-tree-id797 . -1)) nil (25593 10930 292023 394000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4477) (undo-tree-id780 . 1) (undo-tree-id781 . 1) (undo-tree-id782 . 1) (undo-tree-id783 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 4477) (undo-tree-id784 . 1) (undo-tree-id785 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4477) (undo-tree-id786 . 1) (undo-tree-id787 . 1) (undo-tree-id788 . -1)) nil (25593 10930 292012 594000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4553) (undo-tree-id771 . 1) (undo-tree-id772 . 1) (undo-tree-id773 . 1) (undo-tree-id774 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 4553) (undo-tree-id775 . 1) (undo-tree-id776 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4553) (undo-tree-id777 . 1) (undo-tree-id778 . 1) (undo-tree-id779 . -1)) nil (25593 10930 291999 394000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4663) (undo-tree-id762 . 1) (undo-tree-id763 . 1) (undo-tree-id764 . 1) (undo-tree-id765 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 4663) (undo-tree-id766 . 1) (undo-tree-id767 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4663) (undo-tree-id768 . 1) (undo-tree-id769 . 1) (undo-tree-id770 . -1)) nil (25593 10930 291987 494000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4757) (undo-tree-id755 . 1) (undo-tree-id756 . 1) (undo-tree-id757 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 4757) (undo-tree-id758 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4757) (undo-tree-id759 . -1) (undo-tree-id760 . 1) (undo-tree-id761 . -1)) nil (25593 10930 291975 694000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4845) (undo-tree-id746 . 1) (undo-tree-id747 . 1) (undo-tree-id748 . 1) (undo-tree-id749 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 4845) (undo-tree-id750 . 1) (undo-tree-id751 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4845) (undo-tree-id752 . 1) (undo-tree-id753 . 1) (undo-tree-id754 . -1)) nil (25593 10930 291964 794000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 4933) (undo-tree-id737 . 1) (undo-tree-id738 . 1) (undo-tree-id739 . 1) (undo-tree-id740 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 4933) (undo-tree-id741 . 1) (undo-tree-id742 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 4933) (undo-tree-id743 . 1) (undo-tree-id744 . 1) (undo-tree-id745 . -1)) nil (25593 10930 291952 894000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5026) (undo-tree-id728 . 1) (undo-tree-id729 . 1) (undo-tree-id730 . 1) (undo-tree-id731 . -1) (#("C" 0 1 (fontified t face font-lock-comment-face)) . 5026) (undo-tree-id732 . 1) (undo-tree-id733 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5026) (undo-tree-id734 . 1) (undo-tree-id735 . 1) (undo-tree-id736 . -1)) nil (25593 10930 291938 294000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5102) (undo-tree-id725 . 1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 5102) (undo-tree-id726 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5102) (undo-tree-id727 . 1)) nil (25593 10930 291927 694000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5184) (undo-tree-id722 . 1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 5184) (undo-tree-id723 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5184) (undo-tree-id724 . 1)) nil (25593 10930 291921 994000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5277) (undo-tree-id719 . 1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 5277) (undo-tree-id720 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5277) (undo-tree-id721 . 1)) nil (25593 10930 291916 294000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5359) (undo-tree-id710 . 1) (undo-tree-id711 . 1) (undo-tree-id712 . 1) (undo-tree-id713 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 5359) (undo-tree-id714 . 1) (undo-tree-id715 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5359) (undo-tree-id716 . 1) (undo-tree-id717 . 1) (undo-tree-id718 . -1)) nil (25593 10930 291909 694000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5429) (undo-tree-id701 . 1) (undo-tree-id702 . 1) (undo-tree-id703 . 1) (undo-tree-id704 . -1) (#("P" 0 1 (fontified t face font-lock-comment-face)) . 5429) (undo-tree-id705 . 1) (undo-tree-id706 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5429) (undo-tree-id707 . 1) (undo-tree-id708 . 1) (undo-tree-id709 . -1)) nil (25593 10930 291895 294000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5496) (undo-tree-id692 . 1) (undo-tree-id693 . 1) (undo-tree-id694 . 1) (undo-tree-id695 . -1) (#("S" 0 1 (fontified t face font-lock-comment-face)) . 5496) (undo-tree-id696 . 1) (undo-tree-id697 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5496) (undo-tree-id698 . 1) (undo-tree-id699 . 1) (undo-tree-id700 . -1)) nil (25593 10930 291882 394000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5588) (undo-tree-id649 . 1) (undo-tree-id650 . 1) (undo-tree-id651 . -1) (#("I" 0 1 (fontified t face font-lock-comment-face)) . 5588) (undo-tree-id652 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5588) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . 1) (undo-tree-id691 . -1)) nil (25593 10930 291865 994000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5654) (undo-tree-id640 . 1) (undo-tree-id641 . 1) (undo-tree-id642 . 1) (undo-tree-id643 . -1) (#("I" 0 1 (fontified t face font-lock-comment-face)) . 5654) (undo-tree-id644 . 1) (undo-tree-id645 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5654) (undo-tree-id646 . 1) (undo-tree-id647 . 1) (undo-tree-id648 . -1)) nil (25593 10930 291799 394000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5720) (undo-tree-id631 . 1) (undo-tree-id632 . 1) (undo-tree-id633 . 1) (undo-tree-id634 . -1) (#("I" 0 1 (fontified t face font-lock-comment-face)) . 5720) (undo-tree-id635 . 1) (undo-tree-id636 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5720) (undo-tree-id637 . 1) (undo-tree-id638 . 1) (undo-tree-id639 . -1)) nil (25593 10930 291787 194000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 5786) (undo-tree-id622 . 1) (undo-tree-id623 . 1) (undo-tree-id624 . 1) (undo-tree-id625 . -1) (#("F" 0 1 (fontified t face font-lock-comment-face)) . 5786) (undo-tree-id626 . 1) (undo-tree-id627 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 5786) (undo-tree-id628 . 1) (undo-tree-id629 . 1) (undo-tree-id630 . -1)) nil (25593 10930 291772 594000) 0 nil])
([nil nil ((5496 . 5497)) nil (25593 10930 291760 794000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("s" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("c" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("a" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("m" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("E" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("r" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("o" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("f" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("l" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("a" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("n" 0 1 (fontified nil face font-lock-comment-face)) . 5590) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("m" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("r" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("e" 0 1 (fontified t face font-lock-comment-face)) . 5590) (#("T" 0 1 (fontified t face font-lock-comment-face)) . 5590)) nil (25593 10930 291754 94000) 0 nil])
([nil nil ((#(";(load \"Shell_term\")                        ; Terminal for Emacs.
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 7 (fontified t face font-lock-comment-face) 7 9 (fontified t face font-lock-comment-face) 9 13 (fontified t face font-lock-comment-face) 13 66 (fontified t face font-lock-comment-face)) . 5591) (undo-tree-id613 . -65) (undo-tree-id614 . 20) (undo-tree-id615 . -66) (undo-tree-id616 . -66) (undo-tree-id617 . -66) (undo-tree-id618 . -66) (undo-tree-id619 . -46) (undo-tree-id620 . -46) (undo-tree-id621 . -66) 5637) nil (25593 10930 291743 594000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 5589) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1)) nil (25593 10930 291717 894000) 0 nil])
([nil nil ((5561 . 5565) (t 25593 10930 320725 985000)) nil (25593 11087 137104 830000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -5562) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -5563) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -5564) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) 5565) nil (25593 11087 137094 30000) 0 nil])
([nil nil ((5562 . 5566)) nil (25593 11087 136914 230000) 0 nil])
([nil nil ((5566 . 5568)) nil (25593 11087 136907 930000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 5544) (t 25593 11087 170718 928000)) nil (25593 29378 469042 792000) 0 nil])
([nil nil ((5567 . 5568) (t 25593 29378 486412 790000)) nil (25594 31444 110494 188000) 0 nil])
([nil nil ((5568 . 5570)) nil (25594 31444 110485 788000) 0 nil])
([nil current ((#("a" 0 1 (fontified t face font-lock-string-face)) . -5568) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) 5569) nil (25594 31444 110465 688000) 0 nil])
nil
