(undo-tree-save-format-version . 1)
"c218118fdece89c60207f794dc6d1140ce2218e5"
[nil nil nil nil (25592 26152 447305 338000) 0 nil]
([nil nil ((nil rear-nonsticky nil 192 . 193) (nil fontified nil 161 . 193) (161 . 193) (t 25581 52501 0 0)) nil (25592 27440 366881 878000) 0 nil])
([nil nil ((193 . 194) 193) nil (25592 27440 366880 278000) 0 nil])
([nil nil ((nil rear-nonsticky nil 194 . 195) (#("
" 0 1 (fontified nil)) . -279) (194 . 280)) nil (25592 27440 366878 778000) 0 nil])
([nil nil ((nil rear-nonsticky nil 250 . 251) (nil fontified nil 228 . 251) (228 . 251) 227) nil (25592 27440 366876 978000) 0 nil])
([nil nil ((#("aggressive-indent-mode
" 0 22 (fontified nil) 22 23 (rear-nonsticky nil fontified nil)) . 228) (undo-tree-id87 . -22) (undo-tree-id88 . -23) (undo-tree-id89 . -23) (nil rear-nonsticky t 250 . 251)) nil (25592 27440 366874 978000) 0 nil])
([nil nil ((nil rear-nonsticky nil 242 . 243) (nil fontified nil 220 . 243) (220 . 243) 219) nil (25592 27440 366871 478000) 0 nil])
([nil nil ((#("org-exsty " 0 8 (fontified t) 8 10 (fontified t)) . 243) (undo-tree-id85 . -9) (undo-tree-id86 . -8)) nil (25592 27440 366869 478000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -242) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 243) nil (25592 27440 366866 78000) 0 nil])
([nil nil ((242 . 243)) nil (25592 27440 366860 278000) 0 nil])
([nil nil ((nil rear-nonsticky nil 292 . 293) (#("
" 0 1 (fontified nil)) . -325) (292 . 326) 272) nil (25592 27440 366858 878000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . 293)) nil (25592 27440 366857 178000) 0 nil])
([nil nil ((293 . 294)) nil (25592 27440 366856 178000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . -280) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -281) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -282) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -283) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -284) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -285) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("x" 0 1 (face font-lock-string-face fontified t)) . -286) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -287) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -288) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -289) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -290) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -291) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . 1) (undo-tree-id75 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -292) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 293) nil (25592 27440 366850 78000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -273) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -274) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -275) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("n" 0 1 (face font-lock-string-face fontified nil)) . -276) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -277) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -278) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -279) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 280) nil (25592 27440 366809 378000) 0 nil])
([nil nil ((305 . 307)) nil (25592 27440 366788 878000) 0 nil])
([nil nil ((307 . 309) 226) nil (25592 27440 366787 778000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -308) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 309) nil (25592 27440 366785 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 310 . 311) (#("
" 0 1 (fontified nil)) . -432) (308 . 433)) nil (25592 27440 366782 278000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 308) (undo-tree-id14 . -1)) nil (25592 27440 366780 578000) 0 nil])
([nil nil ((#("(use-package aggressive-indent-mode
  :config
  (add-hook 'emacs-lisp-mode-hook #'aggressive-indent-mode)
  (add-hook 'css-mode-hook #'aggressive-indent-mode))
Malabarba/aggressive-indent-mode
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 35 (face font-lock-constant-face fontified t) 35 38 (fontified t) 38 45 (face font-lock-builtin-face fontified t) 45 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 104 (fontified t) 104 105 (face (rainbow-delimiters-depth-2-face) fontified t) 105 108 (fontified t) 108 109 (face (rainbow-delimiters-depth-2-face) fontified t) 109 157 (fontified t) 157 158 (face (rainbow-delimiters-depth-2-face) fontified t) 158 159 (face (rainbow-delimiters-depth-1-face) fontified t) 159 160 (fontified t) 160 191 (fontified t) 191 192 (rear-nonsticky t fontified t) 192 193 (fontified t)) . 1) (undo-tree-id0 . -193) (undo-tree-id1 . -193) (undo-tree-id2 . -160) (undo-tree-id3 . -192) (undo-tree-id4 . -192) (undo-tree-id5 . -36) (undo-tree-id6 . -160) (undo-tree-id7 . -192) (undo-tree-id8 . -115) (undo-tree-id9 . -160) (undo-tree-id10 . 193) (undo-tree-id11 . -1) (undo-tree-id12 . 35) (undo-tree-id13 . -159)) nil (25592 27440 366776 178000) 0 nil])
([nil nil ((238 . 239)) nil (25592 27440 366736 278000) 0 nil])
([nil nil ((1 . 9) (t 25592 27440 454219 776000)) nil (25592 27744 775815 222000) 0 nil])
([nil nil ((9 . 10)) nil (25592 27744 775814 22000) 0 nil])
([nil nil ((248 . 249) 248) nil (25592 27744 775813 22000) 0 nil])
([nil nil ((249 . 253)) nil (25592 27744 775811 822000) 0 nil])
([nil nil ((253 . 256)) nil (25592 27744 775810 922000) 0 nil])
([nil nil ((256 . 259)) nil (25592 27744 775809 922000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -258) (undo-tree-id241 . -1) (undo-tree-id242 . -1) 259) nil (25592 27744 775808 622000) 0 nil])
([nil nil ((258 . 261)) nil (25592 27744 775805 822000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -255) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -256) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -257) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -258) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#("g" 0 1 (face font-lock-comment-face fontified t)) . -259) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#("g" 0 1 (face font-lock-comment-face fontified t)) . -260) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 261) nil (25592 27744 775802 422000) 0 nil])
([nil nil ((255 . 256)) nil (25592 27744 775785 722000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -255) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 256) nil (25592 27744 775784 322000) 0 nil])
([nil nil ((255 . 256)) nil (25592 27744 775781 222000) 0 nil])
([nil nil ((256 . 280)) nil (25592 27744 775780 322000) 0 nil])
([nil nil ((280 . 283)) nil (25592 27744 775778 822000) 0 nil])
([nil nil ((10 . 11) 10) nil (25592 27744 775777 522000) 0 nil])
([nil nil ((1 . 2)) nil (25592 27744 775776 122000) 0 nil])
([nil nil ((1 . 8)) nil (25592 27744 775775 122000) 0 nil])
([nil nil ((8 . 12) (#("k" 0 1 (face font-lock-comment-face fontified t)) . -8) (undo-tree-id220 . -1) (8 . 9)) nil (25592 27744 775773 722000) 0 nil])
([nil nil ((5 . 6)) nil (25592 27744 775771 22000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . 6)) nil (25592 27744 775770 22000) 0 nil])
([nil nil ((12 . 13)) nil (25592 27744 775769 22000) 0 nil])
([nil nil ((13 . 16)) nil (25592 27744 775767 822000) 0 nil])
([nil nil ((16 . 24)) nil (25592 27744 775766 722000) 0 nil])
([nil nil ((24 . 25) 22) nil (25592 27744 775765 622000) 0 nil])
([nil nil ((25 . 26)) nil (25592 27744 775764 222000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -25) (undo-tree-id219 . -1) 26) nil (25592 27744 775762 522000) 0 nil])
([nil nil ((25 . 33)) nil (25592 27744 775760 322000) 0 nil])
([nil nil ((33 . 38)) nil (25592 27744 775759 122000) 0 nil])
([nil nil ((38 . 39)) nil (25592 27744 775758 222000) 0 nil])
([nil nil ((32 . 33)) nil (25592 27744 775757 222000) 0 nil])
([nil nil ((nil rear-nonsticky nil 289 . 290) (#("
" 0 1 (fontified nil)) . -324) (289 . 325)) nil (25592 27744 775755 822000) 0 nil])
([nil nil ((290 . 294)) nil (25592 27744 775754 222000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -290) (undo-tree-id215 . -1) (#("p" 0 1 (fontified t)) . -291) (undo-tree-id216 . -1) (#("d" 0 1 (fontified t)) . -292) (undo-tree-id217 . -1) (#("e" 0 1 (fontified t)) . -293) (undo-tree-id218 . -1) 294) nil (25592 27744 775752 222000) 0 nil])
([nil nil ((290 . 293)) nil (25592 27744 775738 622000) 0 nil])
([nil nil ((293 . 297)) nil (25592 27744 775737 622000) 0 nil])
([nil nil ((290 . 292) (#("(" 0 1 (fontified nil)) . -290) (290 . 291)) nil (25592 27744 775736 122000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 291)) nil (25592 27744 775734 622000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 298) (undo-tree-id212 . 1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 298) (undo-tree-id213 . 1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 298) (undo-tree-id214 . 1)) nil (25592 27744 775732 622000) 0 nil])
([nil nil ((329 . 330)) nil (25592 27744 775728 822000) 0 nil])
([nil nil ((299 . 301) (#("'" 0 1 (fontified nil)) . -299) (299 . 300)) nil (25592 27744 775727 622000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 300)) nil (25592 27744 775725 922000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-constant-face fontified t)) . -328) (undo-tree-id211 . -1) 329) nil (25592 27744 775724 622000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-constant-face fontified t)) . 328) (undo-tree-id210 . -1)) nil (25592 27744 775722 222000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-constant-face fontified t)) . -327) (undo-tree-id208 . -1) (undo-tree-id209 . -1) 328) nil (25592 27744 775720 122000) 0 nil])
([nil nil ((363 . 364)) nil (25592 27744 775717 22000) 0 nil])
([nil nil ((364 . 367)) nil (25592 27744 775715 822000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -363) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -364) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -365) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -366) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 367) nil (25592 27744 775713 322000) 0 nil])
([nil nil ((363 . 367)) nil (25592 27744 775702 522000) 0 nil])
([nil nil ((366 . 368) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -366) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) 367) nil (25592 27744 775692 822000) 0 nil])
([nil nil ((368 . 373)) nil (25592 27744 774848 922000) 0 nil])
([nil nil ((328 . 329) 328) nil (25592 27744 774847 22000) 0 nil])
([nil current ((374 . 375)) nil (25592 27744 774841 122000) 0 nil])
nil
